{"version":3,"sources":["../src/lib/directive.ts","../src/lib/dom.ts","../src/lib/part.ts","../src/lib/template.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/default-template-processor.ts","../src/lib/template-factory.ts","../src/lib/render.ts","src/lit-html.ts","../src/lib/modify-template.ts","../src/lib/shady-render.ts","../src/lib/updating-element.ts","../src/lib/decorators.ts","../src/lib/css-tag.ts","src/lit-element.ts","../node_modules/localforage/dist/localforage.js","utils/prop.ts","components/pl-header.js","utils/identity.js","components/pl-form.js","components/pl-tag.js","components/pl-link.js","components/personal-links.js","main.js"],"names":["Header","css","_e","dispatchEvent","CustomEvent","html","handleShowForm","LitElement","identity","x","Form","e","preventDefault","event","detail","link","convertFormValuesToLink","target","form","url","value","description","tags","split","filter","createdAt","Date","handleSubmit","Tag","type","Boolean","classList","toggle","tag","tagTemplate","pad","v","String","padStart","Link","Object","date","getMonth","getDate","getFullYear","toJSON","formatDate","map","PersonalLinks","Set","links","flatMap","Array","selectedTags","size","some","has","localForage","getItem","formOpen","setItem","delete","add","requestUpdate","handleToggleForm","handleToggleTag","handleNewLink","selectedLinks"],"mappings":";;AiBAA,AQAA;ARCA;AACA;AACA;AACA,ACJA,SAAgB,IAAhB,CAAqD,GAArD,EAA2D;ADK3D,AFLA,ARmBA,APnBA,ACAA,ACAA,AIkBA,AGAA,ALAA,ACAA,AFlBA,AUAA,AWAA,AHAA,AFAA,AIAA,ADAA,AFAA,AFCE,SAAO,CAAC,IAAI,CAAC,CAAC,GAAD,CAAb;ADKF,ANYA,AHCA,AUjBC;ADKD,AVPA,ADmBA,AGAA,ALGA,ACFA,AmBnBA,AHAA;AJOA,AHRA,AHAA,AHAA,AUAA,OAAA,CAAA,IAAA,GAAA,IAAA;ADSA,AXWA,AGCA,ALrBA,ACAA,AmBEA;APQA,AGLO,MAAMQ,QAAQ,GAAGC,CAAC,IAAIA,CAAtB;AHMP,AXWA,AGtBA,AeGA;APSA;AACA,AXUA,AkBnBA;APUA;AACA,AFJO,ATaP,AkBnBA,MTMa,2BAA2B,GACnC,wBAAwB,QAAQ,CAAC,SAAlC,IACC,aAAa,aAAa,CAAC,SAFzB;AEKP;AACA,AFFA,ATfA,AkBMA,MTSM,iBAAiB,GAAG,MAAM,EAAhC;AEGA,AjBEA,MAAM,UAAU,GAAG,IAAI,OAAJ,EAAnB;AiBDA,AFFM,AfUN,ACLA,ACsBA,ACxBA,AUNA,MEGa,SAAP,CAAgB;AEGtB,AFEE,EAAA,WAAA,CAAY,OAAZ,EAA6B,SAA7B,EAA8C;AEDhD,AFEI,ADiBJ,APjBA,MOiBM,ECjBE,SAAS,KAAK,GDiBG,GACrB,CAAC,OAAD,EAAkB,CClBlB,EAAqC,EDkBrC,KAAqD;AGnBzD,AFEM,ADkBA,AbjBC,AUXP,AH6BA,EMDM,IbjBO,EaiBD,CAAC,GClBD,IAAI,EdCS,GcDb,AdCgB,CcAlB,CDiBJ,CAAsB,GbjBM,CAAC,EaiB7B,CAA6B,OAA7B,EAAsC,EbjBhB,GaiBtB,EADmD,AbhBH,CakBhD,QblBsB,IACvB,MAAM,CAAC,cAAP,CAA4C,OcFrC,CAAN,iBdED,KACG,SAFD;AgBFP,AFGK,ADkBC,AbfN,ACmBO,AUtBP,ARZA,ACAA,AFUO,MDwBM,ACxBA,MAAM,EDwBE,CCxBC,EDwBE,EAAjB,KCxBwB,MAAM,CAAC,IAAI,CAAC,MAAL,EAAD,CAAN,CAAsB,KAAtB,CAA4B,CAA5B,CAA8B,IAAtD;AcAP,AHqBM,APnBA,ALwBN,ACxBA,MIAa,wBAAP,CAA+B;AUDrC,AFEI,ADmBE,APnBJ,AIPF,AFNA,AGaA,ACPA,MFAM,AEAA,CAAC,EEOE,OAAL,GAAe,GJPG,GAAG,CIOrB,MFPJ,GACI,CAAwB,IAAxB,EAAiC,IAAjC,KAAsD,IAD1D;AIMA,AFEG,ADmBG,AH3BuB,AH2BvB,GO9BgB,CAapB,KPiBc,eAAV,CAA0B,MAA1B,EAAgD;ASpBtD,AFIE,ADiBI,AH5BN,ACSA,AJmBE,AJxBF,ACFA,AQ6GO,MLnFD,AKmFO,aLnFM,GAAG,AKmFO,GAA8B,WLnFvB,CAAC,GAAf,CAAmB,MAAM,CAAC,IAA1B,CAApB;ASpBF,ANNA,AFEO,AI6GL,EAAA,IJ7GW,KAAK,EI6GL,CJ7GQ,AI6GP,IJ7GW,CI6GZ,EAAiB,IJ7GT,AI6GR,EJ7GN,AI6GqC;AIxG5C,AHoBM,AZIC,AO3BP,AGIA,AJmBE,AKqFE,MXjFS,AMJP,GMAO,GDqFD,CXjFQ,CYJd,EZIiB,AWiFnB,EXjFG,CMJY,KAAK,SAAtB,EAAiC;ASnBnC,AFEE,ADkBG,ANAD,ALpBG,AUyGD,CC/FN,GNUI,EOlBE,AZFO,KUyGF,KEvGT,AZFqB,CKoBN,CKqFX,CEvGU,AZFU,CKoBN,MLpBa,MAAM,KAAhC;AcCP,AFEI,AdCG,AKpBP,AMiBA,AJoBM,AJvBA,ACFA,AQ8GE,MZtGK,AOiBP,AJvBO,ACFA,EUOL,KAAK,EFuGE,GLrFG,CPjBQ,COiBN,AHzBd,AQ8Gc,CR9GO,CJSvB,AGPE,CHOD,AGPwB,AS4GN,CEvGf,APkBgB,CKqFJ,GAAQ,CEvGC,EPkBT,CPhBhB,AYqGI,CLtFY,CPdf,IcHD,CdEA,CcFoC,CdInC,GAAA,GAAiB,IAFlB,EAGC,MAAA,GAAoB,IAHrB,KAGmC;AgBNvC,AFEM,ADkBN,AbbM,AOaA,AJlBJ,ACFA,AFAK,ECEL,ACFA,ISoBI,ANAA,ALpBO,GFOA,IGLX,ACFA,CJOgB,AGJZ,ACFA,CGmBS,EAAE,ALpBO,EFOD,CEPI,CKoBN,AHpBnB,CJOI,AGLJ,CCDmC,CJMT,AOaX,AJjBS,ADHK,GWoBJ,ETpBzB,CSqBE,AXrBuB,CWqBtB,ATnBC,AFFgC,ECEpC,CDFuC,CCInC,ACJJ,EAEkB,CSmBhB,EAAkB,AXrByB,ECE7C,EAE0B,ADJuB,EEAjD,EAE8C,ESmB5C,IXrByD,CWqBR,CXrB1B,CAApB;AcCP,AFEM,ADmBA,AbdE,AWRR,AJkBoB,AJrBD,ACMf,AFDJ,AUuGM,KLvFF,GMIQ,CVzBO,ACMV,CJKK,CAAC,AYiGJ,GZjGO,EGXC,ACMf,CQsGE,EZjGkB,AGX4B,ACMjC,CJKM,CGXN,KCMf,KJKI;AgBNR,AFEM,ADkBO,APlBX,ANKM,AKbD,AE0BH,AJjBA,ACDA,AQsGE,ENtGJ,EOkBW,AbbL,AOaJ,EF1BS,EQ0BD,CVjBH,ACDA,CUAC,CFsGC,EZjGM,CAAC,CILd,CQsGE,CP9GkB,AFSpB,CIiBc,AHlBA,CGkBC,CF1BS,AFSR,EIiBhB,CAAmB,CHlBnB,CCRuB,CLanB,CAAuB,CMLH,AHCxB,CGAE,ADT4D,AE0BrC,CAAC,EPbtB,EAA+B,AOanC,EDlBwB,ACkBQ,COlB9B,CRCkB,CQDe,CdK/B,EMLoB,EACU,KCiBlC,EDlBwB,EAEtB,OAFsB,EAEA;AUH5B,AFEQ,ADiBW,APff,ANGI,AKbN,AMIF,AJsBG,AJjBC,ACDA,AQsGI,AUzIR,IToDmB,AbZX,AkBvCFT,AGAA4B,KrBuCO,AKZP,AFQG,ACDA,CEEC,ENGM,CcLH,AdKL,AILJ,CCPO,ECSK,AFFA,EDCZ,CGCe,ADTH,CDOZ,CDCiB,AkBpCpB,EfqCsB,ADTjB,CSOE,AREgB,AYrCvB,CZqCsB,CAAnB,CQFuB,ATNrB,EAAE,CFOJ,CWD2B,KTNhB,KAAP,GSMmB,EAAnB,ATNiB,MgB7BV,EhB6BP,Ca7BO,Gb6BsB,EgB7BpC,KhB6B2C,Ca7B3C,Ib6BoC,KAAiB,UAAhD,CAFJ;AWOF,AHkBY,AbXL,AKXN,AFOG,ACDA,AQsGI,AM1IR,AGAA,ANWA,CVeO,KQ0BwB,EKnDzB5B,AGAA4B,ClBoCG,ACDA,EiBpCT,GHAA,ELoDM,AVfF,ECDA,CDCe,ECDE,KDCjB,ICDA,EiBnCyB,GHAG;AFkChC,AFCQ,ADiBF,APfF,ANIC,AWTL,AJsBE,AJjBC,ACDA,AQsGK,AM1IwB,AGAH,CrB+BtB,GoB9BDlB,EbqDA,EDjBE,COeK,ICjBA,CREC,ACiBA,CKoFC,ELpFE,EDjBE,CMqGC,ENrGhB,AcrCH,ENmCO,AREgB,AMqGA,CEvGC,GFuGV,ELpFe,CAAC,AKoFA,KEvGvB,AFuGO,CEvGsB,EFuGE,GEvGG,CPmBzB,AKoF0B,CLpFC,AKoFA,GLpF3B,CAA+B,COnBxC,IFuG+B,AQ1IxB,CbsDuC,AKoFA,CLpFC,IKoFhB,CAA/B,ELpFS,AatDhB,CbsDC;ASnBF,AFCO,ADiBC,APfF,ANKN,AILE,AFJK,AUiGH,AQnIJ,AFAgC,AIEhC,ADF6B,ANW7B,IF0CQ,EXnBK,AoBhCPwB,CR+BA,CDmBO,AOnDPxB,IdqCM,ActCZ,CNoCa,IQlCI,GAAGuB,ChBoCC,EgBpCE,ChBoCC,EJJS,CoB/B/B5B,ChBmC0B,CJJQ,IkBjCN,GlBiCvB,OoB/BA,ShBmCiB,CAAsB,OAAtB,EAA+B,IAAI,CAAC,KAAL,CAAW,CAAX,CAA/B,EAA8C,OAA9C,CAAlB;AUFN,AFCQ,ADiBA,APfF,AK1CN,AJ0DE,AJhBA,ADHF,AkBnC8B,EjBsC5B,EUeM,ENCF,EJhBE,CAAC,CmBnCC4B,ETgDG,CCfA,AREA,AgBnCC,CfmDA,CJhBN,EAA+B,EIgBpB,GDhBG,CAAC,CQFf,GAAmB,CRErB,ACgBJ,EAA4B,COlBtB;AEAR,AFCO,AREF,ADVE,AE0BH,AJhBA,ASoGA,AQ3I0B,AFDE,AGAH,ANa7B,GOXA,GjB4Ba,EFUL,CAAC,EIgBE,AKoFA,CTpGC,CAAR,GEVmB,AO8GnB,GP9GuB,AE0BvB,KF1BsB,IAA+C;AWQzE,AFCK,ADgBG,ARxBN,AE0BC,AKoFA,AM7I6B,AIOhC,ADP6B,Gd4CyB,AKoFK,CLrEzD,KF5BO,KAAK,CAAC,OAAN,CAAc,KAAd,KACH;AWON,AHiBQ,APfJ,ADRE,AE2BJ,AJnBE,AiBxC0B,ALc9B,GVkBO,CQuBC,CRvBC,GCQD,CHAC,CERK,EQuBE,CAAC,CPfH,ADRK,CFQJ,GUeC,CPfG,ADRa,AFQ5B,CUe4C,ARvBf,ECQ7B,CHAmB,CGAC,EDRe,CAAC,CFQZ,OERI,AFQ5B,CERG,CAFL,AFUmC;AaDrC,AFAI,ADiBM,APfJ,ADRL,AFQK,ACDJ,AQsGA,AQ9I4B,AFDE,AGAH,ANe7B,CVeO,CDWL,AQsGA,ICtFQ,GThBD,CDCC,CWFC,CDiBK,AThBP,CSgBQ,APfJ,CAAC,AHAA,CSqGC,CEvGC,AFuGA,ENrGE,CHAC,ESqGJ,EAAqB,IEvGhC,ADiBM,ADsFK,CCtFiB,AVf1B,CSqG4C,CTrGpB,IUepB,APfI,COeyB,APfX,OOelB,APfI,EOekC,APfX,IAAI,COe/B,APfgC,KAAL,CAAW,CAAX,CAAvB,EAAsC,OAAO,CAAC,YAA9C,CAAD,CAAP;AUDN,AFAG,ADiBM,APfJ,ADPL,AFOQ,ACDJ,AQsGA,AGjIJ,QZ4BQ,ECDE,CAAC,CDCC,ASqGA,CTrGC,CCDC,EQsGV,GRtGe,EDCX,CAAc,ICDR,CAAa,CDCC,CAAC,CAAD,CAApB,ECDM,GAAsB,CAAhC;AYAJ,ANPM,AH0BJ,AJjBK,ACDH,AFJE,AU0GA,AQhJwB,ALc9B,MbwBa,EKsBL,AHlBA,CMRQ,EH0BL,AKoFA,CRtGC,EGkBE,ALtBR,CEIS,AFJM,EEIjB,CQsGE,ELpFc,CAAC,OAAP,CAAe,GG1BvB,CACF,AHyBU,CAAoB,OG1B5B,EACkB,OHyBV,CAAZ,CAjBoD,CAmBpD,GG5BI,EAC0C;AMOhD,AFAE,ADSW,APRT,ANGG,AUVL,ANOE,AFDF,AUuGM,AUxIR,APKA,ED4BE,AZAA,CWSI,GbLO,AsBrCPE,CJVAnC,AGAA4B,Cf4CE,AIPA,ANOA,CkBlCC,CRiCC,EQjCEQ,CRiCF,AZAR,AoBjCW,ChBkCC,AJDA,CUuGC,EZnGS,AsBrCPC,EhBkCE,CNIf,AELF,AUuGkB,CZlGf,CMJD,AJDkC,CoBjCf,ChBkCC,AFAA,AkBlCAD,CVwIC,AUxIF,CAAN,ClBkCU,AkBlCAE,EpBiCzB,AUuGM,CZlGJ,CEL8D,CFK5C,AIJlB,GkBlCa,CAAmB,CtBsChC,AsBtCa,EtBsCuB,AsBtCD,GtBsCC,AsBtCvB,CAAjB,EtBsCyD,IAArD,KAAmE;AgBJvE,AFAI,ADgBC,APfC,ANIA,AUZG,AFCF,AD0BL,AJnBI,ADLK,AazBX,CFkCA,CNeE,EG3BO,EFCI,ALOP,CAAC,EHIM,AETF,CKwBD,COpBC,AJPK,CFCG,CFON,AIRK,AH2BL,CDnBC,ANII,AETP,CMDP,CMKY,ANLX,CNC8B,CIKjB,CNIK,AETZ,GFSL,AQVF,CMKA,CdKwB,AQTvB,EDwBqB,CAAC,MCzBvB,EAEC,CDuBQ,CAAwB,GAAxB,CAA4B,CCzBrC,EDyBS,CDnBC,ACmBZ,CDnBqC,CEJE,MFI3B,EAAkC,IAAI,CAAC,KAAL,CAAW,CAAX,CAAlC,EAAiD,OAAjD,CAAD,CAAP;AUAN,AFAG,ADiBH,APhBK,ANIG,AUbW,AFKb,ALID,ACAD,AFFA,AUuGE,AGpIN,IOFMC,EZwBa,AFKT,CYzCJ7B,EhB6CG,AFFA,CFMK,AQRA,CRQC,AYiGJ,EJzGM,AJIJ,CJIK,AIJJ,EFFV,CEEa,AQqGX,CJzGgB,AJIlB,CJIoB,AQRD,ANEJ,CFMM,AIJL,CAAC,CIJJ,Ac9BhB,Cd8B0B,CJIH,CAApB,CFFA,CEEuB,CAAC,EAAxB,CJII,CQRS,AJIe,CIJ1B,oBc9BS,SAAd;ANkCD,AhBKQ,AUdU,AH4BhB,AHlBI,AFDF,AUsGI,AUxIR,APGA,IfoCQ,AuB7CFsC,Cb+BE,CH4BF,EepDAT,EpBiCI,EECE,AkBnCZ,CtBuCiB,AIJJ,CJIK,AOcJ,CKmFC,CRrGC,GGkBG,CKmFC,CRrGC,EFDE,EFKf,AYiGiB,CZjGK,AELI,EKmBhC,AHlBc,AFDZ,CECyB,AQqGd,CLnFe,AHlBd,CJIR,AIJF,AmB1CL,CnByC+B,AQsGA,CRpG1B,AkBnCwB,GVuIf,GAAwB,MAAM,CAAC,KAAD,CAArC,UW/IO,gBAAd;AP0CD,AFjCsB,ARiClB,ANKI,AUfqB,AFMvB,ADuBF,AJnBA,ACEE,AFFF,AqB1CJ,ADQ8B,APE9B,IfqCQ,AUfqB,EFMnB,EerCJS,CvB8CO,AGLJ,CGAC,AEJI,ANIJ,EFKM,CAAR,EQTW,ALIJ,ADAA,GAAW,CIAP,AHAf,CDAA,CAJ8D,AqBtClE,CjB0CsB,AJClB,CCDmB,CKJjB,EFIoB,AEJI,ELIF,OAAxB,EAAiC,KoBzCE,SjByCjB,CAAuB,OAAvB,EAAgC,IAAhC,EAAsC,OAAtC,CAAlB;AUCJ,AFAA,ARAI,ANKG,AUhBC,AFOA,ADuBJ,AJnBE,ACEA,AQmGA,AW/IiC,ADOT,APE9B,IRoDI,EG9BkC,IPW5B,CGAC,AMqGA,CLlFC,CWlEV,AGAA,CXoCA,APWY,CImBC,EKkFT,ELlFa,AJnBA,CGAC,CAAC,KAAjB,AEJgB,ELId,EAAwB,Ce/CR,AGAA,Ib2Cd,EAAuB,ADuBhB,CAAa,MAAb,ECvByB,ADuBJ,CCvBK,KDuBC,CAAC,ICvBnC,cDuB4B,EAArB,CAAX,CAF0B,CAG1B;ASnBJ,AVAG,ANKE,AUhBH,AFOM,ALIA,ACEF,AFFF,AUqGE,AWhJiC,ALJnC,AGAA,CrB6CG,GQFC,IEPA,APWA,CKJK,CAAC,ANIJ,CUqGC,CTrGC,CKJJ,ALIK,COXC,AFOI,CU3CP/C,AGAAA,CnB+CK,AUqGV,CF/GA,EPUE,ADAW,IMJX,EENM,AFMe,CENd,CRUY,CAAC,CMJK,CU3ClB,AGAA,Eb2CqB,IAAI,MENlC,CAA0B,CRUb,CACX,KQXF,CFM8B,CENK,AFMO,ANKjC,CAAC,KMLgC,CAAA,CNI7B,EAEX,GMNwC,CAAA,EEN1C,EAAqD,IAArD,EAA2D,KAA3D,CADJ;AMYF,AVAE,AIVA,ALCI,AGKyB,AGnC/B,AJ0DI,AJnBG,ACED,AFDM,AUoGJ,AU1IsB,APG9B,IRqDI,EG7BE,ALCO,AGKkB,OY5C7B,EVsCa,AE+GA,ELlFE,CG7BC,AH6BA,CKkFC,CAAC,CJzG0B,EAAf,CHLzB,CAAyB,AO8GhB,CAAW,CLlFtB,CAAwB,GAAxB,AKkFW,AQrJO,CbmEU,AKkFxB,GLlFJ,EAAiC,QAAjC,GG7B4C,CAAC,KAAD,CAA9C;AMWF,ANVE,ALOA,AGH8C,ADyB7C,AJnBE,ACEC,AFJa,AU+Ff,AW1ImC,AHHnC,AEU0B,EjBmC5B,CEJoD,CA4BpD,CC3B8C,CEJ1C,ARWE,CML0B,GENxB,ARQS,EAIX,CQZK,ALOX,CAAY,AGHkC,CAAZ,AY1CzBA,CZ0CH,CNIW,CQRD,ARQd,CQRe,ARE+C,CAW9D,CGNF,EAA8B,IAA9B,CKPgB,CAAhB,ALO4C,Ce7C/B,Mf6Cb,EAA0E;AWI5E,AHeO,AHzBL,ALIA,AGGM,ALGL,ACEG,AFCF,AqBjDmC,ARUvC,IPiCQ,EKkBK,AHzBP,EFOM,CHHV,AGGW,KHHX,CKJa,ELIL,CKJQ,CGyBQ,AHzBP,AFOX,CEPN,AFOsB,CHHtB,CQqB4B,OAAD,ALlBrB,IKmBH,iBAAD,IACK,OAAO,iBAAP,KAA6B,UAA9B,GACJ,mBAAmB,CAAC,OAAD,EAAU,iBAAV,CADf,GAEJ,qBAAqB,CAAC,OAAD,EAAU,iBAAV,CAJlB;AGdP,ANVE,ALME,AGCG,AJKD,AFCF,AUiGA,AU5I0B,APG9B,ML2BM,GLMG,EOwGE,KPxGP,AOwGA,CF9Ga,ELME,CKNC,CAAlB,KLME;AWKJ,ANVE,ALME,AEuBF,AJnBA,ACEI,AQkGH,AWpJoC,ARUvC,ERyDE,AJnBA,MOVM,APUA,CEJC,EFID,EEJJ,EEuBW,CFvBC,AEuBA,IFvBZ,QEuBF,CAA2B,EG7BE,CH6B7B,CAA+B,CG7BC,EAAhC,GH6BqC,CAAC,OAAtC,EAA+C,QAA/C;ASlBF,ANVE,ALME,AGAE,ADuBJ,AJnBE,ACEE,AFAF,AazCJ,EPmCM,GYhDF,CV0CE,AFMI,CAAC,CNMH,CGNC,AEuBA,MCvBH,CHAF,AGAgB,CDuBlB,EFvBiB,EHME,CMNf,ENMkB,CQZC,ARYrB,CGNA,EKNmC,IAArC;AMWF,AHiBA,APnBE,ADFE,AGAE,ADuBL,AJnBG,ACEE,AFAF,AUsEuD,AQxHxD,ALQH,CHgHO,CN1EL,AEFI,IKqBA,ALrBI,CAAC,AcvCLsC,CpB6CE,CGNC,IGAH,ANMO,CGNT,EHMY,CGNC,AHMA,CAAb,CGNA,GQqBkB,APnBA,CAAC,EOoBnB,CAAC,IPpBiB,EAAuB,COoBzC,EAA+B,OAA/B,KAAwD;AGjB5D,AHkBM,APpBF,APSG,AWlBL,AFOG,ALID,ACEE,AFAF,AUuGJ,AQxJE,ALMF,CPsBO,KT0BM,CwB1DPS,CrBqDE,CQbC,EJSE,IAAI,APSO,AWlBP,CAAC,CRaC,CHKqC,CAA7B,CGLL,CAAhB,EHMC,CAAC,AWnBG,EAAP,CXmBO,CWnBmB,EJSjB,CAAa,APUnB,KAAuB,EOVjB,CAAP;AUGJ,AHkBM,APpBH,APUG,AWnBF,ALMA,AMlCJ,AJyEO,AJlCH,ACEE,AFAF,Aa5CJ,IL+BI,CW7CA,Cd0FS,ER1BD,CAAC,AMbJ,CHOC,EHMM,CAAC,AWnBJ,ALMA,CNaK,AMbJ,GNaO,AMbJ,CAAb,EAAgB,AEuCO,CR1BV,AMbI,CNaf,CQ0BwB,CFvCN,GEuCU,GAAJ,CFvCC,CAAC,AEuCzB,MFvCiB,GAAiB,CAArC,EAAwC,CAAC,EAAzC,EAA6C;AWMjD,AFJO,ADsBD,AdVA,AWnBF,ALMG,AFKH,ACEE,AFDK,AmBhDR,ANIH,EhBmDM,IeZO,AZKF,IQZD,CLME,CNaI,CAAC,AGPP,CQZI,CIOQ,CfYhB,AMbC,CNac,AWnBJ,ALMqB,CSCZ,AfYpB,AMbC,ENaiB,EMbmB,CSClB,AJPF,CXmBjB,AWnBkB,GIOoB,ATDI,QKN5C,CAFwB,CAGxB,CLKuC,EAApC;AWMP,AFJE,ADsBI,APvD+B,AP6C/B,AMbD,AFKD,ACEE,AFFc,AmB9ClB,ANEF,KGdI,CL4EM,AXlBU,GYJX,AfYI,CAAP,EGRoB,CYJb,ADsBI,CAAC,AXlBU,IWkBlB,ICtBD,CAAc,ADsBI,MCtBE,CAAC,CDsBpB,ICtBmB,ADsBU,CCtB9B,EAA6B,IDsBQ,CAAC,UAArC,ECtBD,CAAP,CDuBQ,EAAE,WAAW,OAAO,CAAC,UAArB,CADJ,EACsC;AGlB5C,AFJC,ADuBO,AdXH,AWnBD,ALMD,AFKC,ACEE,AFHuB,AgB9C1B,AHEH,CDuCO,AfSA,OWdC,ARUqB,GWoBrB,CH9BI,CAAC,AYpCX,ITkEM,CAAA,MAAA,CAAA,EAAA,CH9BA,CG+BK,ESnES,EZoCW,GG8BzB,EACY,cH/BhB,EAAkD;AMYtD,AHoBU,AH/BJ,ALOJ,AMxBF,AR4BI,ACEE,AFJsB,AgB5C1B,AIDE,MTmEM,AH/BJ,Oa5CJ,CV2EgB,CAAC,ASnER/C,KTmEO,EAA8B,GH/BvB,GAAG,EYpCb,CCRO,Cb4ChB;AMYN,AHoBY,APxBL,AIPF,ACjBL,AR4BI,ADHM,AqBpDN,ARSJ,KL6B4B,CJaf,AINT,AClBE,EEgDM,AXvB4B,KWuBvB,CAAC,AXvBd,CqBpDOA,UZ2Bc,GEgDb,AFhDgB,CEgDK,AFhDJ,CLwBQ,AiBnDtB,GjBmDyB,AKxBZ,EAAe,CEgDH,CAAC,APxBG,GOwBhC,EAAkC,EFhDlB,KEgDhB,AF/CR,GAAG,IAAI,KLuB6B,AKvBxB,ELuBT,OKvBkB,EADzB;AK6BA,AHoBW,AVpBP,ACCE,AQqGC,MAAM,MRrGD,CgBpDV,CRyJmB,GAAe,CAAC,KRrGd,AQqGa,EAAiB,CRrG3B,CAAC,CAAC,AQqGQ,KAA0C,EQzJ/DU,CAAb,EAAgB,ChBoDQ,CAAc,MAAd,CAApB,CAnB0B,CAoB1B;AYDN,AFNA,AfYO,AYjCP,AR2BI,ACEE,AFNF,AU0GF,AQzJEA,ALIJ,IJoBI,EGqBE,AfYO,EqBzDTA,CAAC,CAACC,ClB+CK,MHUa,GAAI,AGVR,CHUO,EeZJ,AZEA,CkB/CnB,CrByDwD,CeZjC,GHrBE,ATuBzB,EYFsB,AZEK,CSvBC,GGqBe,CHrB/C;AK4BA,AFNE,ADqBkB,AdTlB,AWlBE,APYA,ACEE,AFNA,AU0GJ,AQxJE,KPgEI,CCpBF,ADoBE,EH1BA,CXkBC,AagGA,EE5GE,CZEC,AU0GA,AQxJJC,IrBwDQ,AGVA,CHUP,AagGQ,AQxJJ,ElB8CM,AmB7ChB,CDDa,CVsCK,CXkBC,AWlBA,AEkHb,CE5Gc,CM5CHT,CVsCZ,ARQiB,CQRC,ARQA,CU0GC,GFlHnB,AEkHsB,CFlH1B,CIMF,AfYO,CWlBwB,CIMC,AZEf,CU0GgB,AQxJnB,CrBwDoB,AGV9B,AkB9C0B,ERwJL,IAAe,GSvJ9B,CtBuDkC,AqBxD9B,CrBwD+B,AagGA,CQxJH,ErBwDR,CAAe,CAAf,AagGgB,CbhGlD,IagGO,CAAP;AIrGF,AFNI,ADyBG,AdbN,AWlBK,ALMM,AMrBZ,AR2BI,ASsGH,AQxJKU,ACAQe,ANEd,ChBoDO,Aa+FA,CPzGK,CQiBN,CFtCF,EDeE,EWtCQA,CRqED,COrEPf,CN4CK,AHrBA,CUvBO,ChB4CK,CgB5CHgB,EP4CJ,ATAO,Ae5CX,CN4CK,AHrBA,CAAC,ASvBJ,MN4CV,EHrBA,GDeyB,CAAC,CCfC,GDezB,CAA6B,IAA7B,EAD2B,CAE3B,AChBN,EAA4C;AK4B5C,AFNG,ADyBK,ARzBJ,AMrBF,AR2BE,ACCE,AFNA,AkB7CEf,ACDI,ANEZ,EJsBE,CGmBA,GVSI,CiBpDH,EP6CM,CZCC,CGDC,Ce5CHA,ElB6CM,CGDC,Ce5CH,EAAE,ClB6CK,GEMG,CFNhB,AkB7CaC,EhBmDM,AFNA,CEMC,CO5BC,CNqBhB,CAAkB,CMrBC,GNqBnB,CAAP,CMrBF,EP4BmC,GAAG,CAAC,CAAf,IAAoB,AgBnDhC,CAA6BL,CAAC,CAACM,MAA/B,OhBmDW,KACf,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,WAAW,GAAG,CAA/B,MAAsC,CAAC,CAD3C,CAvB0B,CAyB1B;AYFN,AFNI,ADyBI,AH/BF,ALMH,AMrBF,AR2BG,ACGE,AFRE,AkB/CM,ALEd,CJqBA,MAEO,GGqBG,AJNA,CCfC,EOvBT,CJ4CY,IHrBI,CGqBR,CACF,IHtBgB,CAAC,IDeI,ICfX,CDegB,ACfA,GOvBjBf,CRsCX,CQtCJ,CRsCsC,CQtCnB,WPuBV,KAA8C,WAAlD,EAA+D,iBGuB1D,KAAK;AEKjB,AHmBQ,AH/BA,ACfN,AR2BE,ACGE,AFRE,AU0GR,AQ3J4C,AFIxC,AHDJ,EJwBE,ICgII,EFjHE,CCfC,AS3BO,CT2BN,AS3BN,GFIKC,AGHP,CV0BA,CACI,WOxBF,CRsCuB,AQtCJ,EGFViB,CXwCiB,CQtCHhB,CNuJK,EFjHxB,AWzCN,CT0JsD,CSzJpC,MHEG,CAAgB,IJ2C7B,CAAN,QI3CmB,CPwBjB,AOxBF,GPyBE,qEADA,GAEA,gCAHJ;AK4BF,AFJG,ADuBK,AH/BD,ALMK,AMlBV,ARwBE,ADLI,AU0GN,AQtJE,AFDD,AGFC,ANAJ,EV8CY,AMlBV,AC6HA,SClFa,ARzBM,AO2GV,EAAE,AQtJJD,ACHA4B,ChB8CY,GO0GmC,KSxJpD,CAAeC,GDGf,CTyBuB,ASzBJnB,ECHnB,CV4B0B,AU5BJ,EDGtB,GTyBF,GU5BE,EAAgCO,KAAhC;ALqDJ,AFJC,ADuBS,AH/BL,ALMD,AMlBH,ARwBG,ACEE,AFPE,AU0GN,AQtJC,ACHA,ANDH,CDwCA,CFkHE,GF/H0B,CG6ClB,AH9BN,AEgHE,EAAE,EClFM,ARzBJ,EQyBM,ATjBJ,EQiG4C,GPzGvC,EQwBF,CRxBK,KAAK,CDQC,GAAG,GCRzB,8BDQgD,IAAvB,CAA4B,CAA5B,CAAvB;AYDN,AFHA,ADsBU,ARzBN,AMjBJ,ARuBI,ADLI,AU0GN,AQrJA,ACHA,ANHF,EH2JE,GU/JE,CT6EM,EXxBF,CWwBK,CRzBH,CQyBK,ARzBJ,AO2GA,EAAE,CP3GC,AHCA,CAAC,EWwBM,EAFN,ERvBM,CAAC,IHCd,EGDM,CHCe,AUuG2B,EPxGzB,CAA3B,EHC8B,CAAC,GAAN,EAArB;AcMR,AHmBU,ARzBN,AFMA,ACCE,AFNE,AU0GN,AUpJC,APRH,EH4JE,IClFQ,ERzBF,CO2GC,CRpGC,CQoGC,CP3GC,GQyBO,ARzBJ,COuGyC,CC9EnC,ARzBjB,KQsBW,ETfS,KAAK,IAAvB,EAA6B;AYAnC,AHmBU,AHhCN,APaA,ACCI,AFND,AU0GL,AUnJA,APVF,EH6JE,IClFQ,EHhCF,IEkHI,CMzJV,CNyJY,EClFM,EAAE,EAJP,OH5BY,IQvChB,CRuCqB,IAA5B,EAAkC;AMctC,ANbM,ALOF,AFMA,ACCI,AQ8FgD,AMnJpD,AHLJ,CHwJA,KF5GM,GLOG,IAAI,CAAC,Ca9CHf,ERuCM,ALOA,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,CAAC,EAAxB,Ca9CY,Cb8CgB;AWOhC,AHkBU,AH/BL,ALOC,AFMF,ACCI,AFPF,AU4GN,MP5GM,AHAA,AU4GA,IP5GI,CHAC,GGAG,OAAO,CAAC,AO4GA,CP5GD,CAAf,CO4GmB,OAAO,CAAC,OAAR,CAAgB,IAAhB,CAAzB;AIrGA,AHkBU,ARxBJ,AFMF,ACCI,AQsGR,AGxLA,MHwLM,MP7GM,IAAI,GAAG,IO6GI,AM3JA,Cb8CC,EO6GE,CAA1B,CM3J4BC,Cb8CT,CAAW,CAAX,CAAb,Ua9CqC;AFqD3C,AHkBU,AHhCN,ACXJ,ARyBI,ACCI,AFPF,AU6GN,KM9JI,CP8BE,ACgIA,IV7GI,CQRC,GRQG,CQRC,ARQA,ImBhDZ,CXwCiB,GRQV,GSnBgB,ETmBE,AU6GA,CFrHjB,ACXmB,ECgIC,EFrHE,GEqHG,CFrHC,AEqHrC,CFrHsC,ACXT,IACxB,CDU4B,KAAe,ACV5C,IAA2B,KDU3B,EAAuD;AMe3D,AHkBU,AHhCJ,ALOA,AMjBA,ARwBF,ACCI,AFRsB,AU8G9B,AM3JG,MN2JG,ED/HM,APyBJ,ECRE,EDQE,ECRE,EMjBM,APyBJ,CAAC,ECRE,AMjBI,EPyBF,OCRf,EAAwB,ODQO,COzBK,AC+HJ,CD/HK,CPyBH,CQsGC,ID/HQ,CAAC,AC+HJ,CAA9C,GD/H0C,EAAc,IPyBnB,GAAY,EOzBP,CAApC,iBPyBW,CAAT;AYAR,AFLO,ADuBG,AHhCJ,ALOE,AFOJ,ACCG,AFTD,AU+GN,ME5Ga,AF4GP,CR7GA,CFFiD,CYGvC,GAAG,CAAC,AVMP,AgBrDX,Cf6CY,CAAC,GAAG,CiB1Cf,CR4CgB,EAAgC,ATF7B,CAAC,ESE+B,GTF9C,GSEW,KAA0D,CF4GxC,GAAG,KAAK,AUxJjC,CVwJZ,AQ3J0BY,IAAxB,EAA8B;AJqDhC,AFLE,ADuBQ,AHhCJ,ACXA,ARyBF,ACCI,AFTA,AU+GR,AQ3JI,AEEUW,MZoCR,ACXI,ACgIJ,EE5GE,AQ7CMA,EZoCJ,CAAC,CYpCO,EpB0CL,AoB1COW,CR6CL,AM/CJ,CVsCL,EISY,AZHW,CQNV,ACXI,ATiBO,GSjBJ,EGoBF,CAAC,AF4GA,GAAG,GE5GV,CACZ,AZJO,CYIN,AF2G0B,CV/GzB,AU+GR,EE3GM,AZJyC,EYInC,AJV0B,CIUhC,EAAS,EJV4B,CIUrC,GJVa,EIUI,CJV2B,CAAC,CIUzB,AJVP,ECXsB,CGqBZ,AJV0B,ECX7B,CAAmB,CDWc,CAAC,KAAL,CCX7B,CAApB,CDW8D,IIUtB,CAAC,CAAD,CAAvB,GAA6B,CJV9C,CAHqD,CAIrD,IISqD,CAAC,GAAG,GAAG,CAAP,CADzC,EAEZ,OAAO,CAAC,CAAD,CAFK,CAAhB;AEMF,AFHE,ADqBQ,AR1BF,AFQJ,ACCI,AFTE,AUmHV,AQ/JMrB,AECM,GJhCSZ,IIgClB,ERgDM,CMjDHY,Ef4CM,CSKC,AMjDJ,EAAED,ACLH,GnBiDQ,CkB5CD,CAACC,ENiDP,CAAc,ATLA,Ae5CZ,Cf4Ca,Ae5CJC,Cf4CG,CAAX,EHAc,CkB7Cf,CNkDF,ATLqB,CAAC,AHAD,CYKE,GZLc,CAAC,KGAN,CAAC,CAAD,CAAjC,EAAsC,AHApC,GYKD,CAAP;AEIF,AFHC,ADqBS,AHhCJ,ALMI,AMlBJ,AR0BF,ACCI,AFTE,AkB5CJC,CN4CC,KJND,ACZI,INkBA,Ae5CJA,If4CQ,CKNC,GAAG,ALMA,AHAF,CSlBO,ES1BN,EAAEH,CT0BS,CNkBH,CAAP,Ce5CK,CAACG,Gf4CO,EMlBzB,EAAiC,INkBrB,Ae5CC,CAAiBD,Ef4CM,CAAxB,Ee9CP,Cf8CmC,EKNE,CAAC,GLMG,CAAC,CKNL,ALMI,CAA1C,CKN8C,SAAR,CAA1C;AMeN,AHkBU,AHhCJ,ALMG,AMlBD,AR0BJ,ACCI,AFVS,AkB3CXE,IT0BE,EDYF,ENeE,CCXA,CKJE,AUtCJA,EhBqDM,CMfC,CRKI,AkB3CP,Cf4CK,Aa9CAtB,CduDC,AgBrDJkB,CT0BS,AP2BJ,CMfC,ANeA,CMfC,CCZK,AS1BR,CAACI,GhBqDD,CAAS,AgBrDb,ChBqDI,AgBrDMF,EVsCJ,ANeU,CMftB,EUtCM,CAAgBG,KAAhB,CAAsB,IhBqDQ,CAAC,CgBrD/B,EAA8BC,EhBqD1B,IAAoC,AgBrDxC,CAAqChB,ahBqDiB,CAAC,CAAD,CAAlD,EgBrDJ,ChBsDA,AgBzDD,chByDe,CAAC,CAAD,CADV,GACgB,8BADhB,GACuC,cAAc,CAAC,CAAD,CADrD,GAEJ,gBAFJ;AYAR,AHkBU,AHhCL,ALMK,AMlBA,AR0BN,ACGG,AFbS,AkB1CViB,MT0BI,IS1BJA,Kf4CS,CHFY,EShBL,CS1BP,CT0BS,CNkBH,Ae5CJ,Cf4CP,EMlBkB,CS1BPC,Cf4CK,AHFhB,CGEA,AHJqC,CAGrC,CGCmB,Ae5CZ,ET0BO,EADA;AK4BxB,AHkBU,AHhCP,ALMS,AMlBF,AR0BN,ACGC,AFZK,AkBhDC,MP2ED,AF5CA,GS/BN,GfiDQ,GMlBO,CNkBH,CQ0BK,AF5CA,GE4CA,AR1BD,CMlBK,GAAJ,GNkBM,CAAP,KAAa,QAAb,GAAwB,CAAxB,GAA4B,MAAM,CAAC,CAAD,CAA1C;AWSZ,AHkBY,AR1BD,AMrBa,AR6BpB,ADTM,AkB3CP,KTuBK,OE+CQ,OAAO,OAAO,CAAC,WAAf,KAA+B,UAAnC,EAA+C;AGjB3D,AHkBc,AHjCZ,ALOO,AFQL,ACEA,AFXM,AUmHJ,EFzHJ,ENiBE,EQwGkB,ERxGd,IAAI,CiB/DV,ER+EiB,EThBF,IQwGX,CCxFoB,CAAC,CThBf,CMjBa,ANiBA,CSgBX,AHjCY,ANiBd,CAAR,GSgB8B,ADwFY,CSvKnC,EX8CT,CAAiC,CAAD,EGiCO,CAAC,CHjCD,CAAC,CAAC,AEyHrC,CAAmD,OCxFvB,CAAoB,CHjCb,CAAc,EGiCrB,CAAyB,IAAzB,CAApB,GHjC2B,CAA0B,CAA1B,CAAvC;AMgBF,AHkBa,AHjCZ,ALOM,AMnBC,AR2BJ,ACEA,AFXM,AU4VR,AU3YA,ADLE,ETgZF,SRjVS,EQiVT,ERjVE,AiB/DOrB,CTgZT,eShZc,KVkCO,GAAf,CAAmB,QAAnB,EAA6B,aAA7B;AK4BR,AHkBW,AR1BN,AMnBE,AR2BH,ACED,AQiVC,AGnZJ,OF+De,CQ5DP,KAAK4B,GAAI;AL8DjB,ANfA,APgBI,ADXM,AU0UA,AGhYV,KMCI,CXgDE,GE+UI,CT/TA,GiBvDR,GVuCc,ARKF,ECWI,COhBE,EPgBC,ADXF,AU0UT,EF/US,CRKG,AU0UgB,CV1U5B,AU0UA,EF/UwB,IUvCvB,UjBwDH,KAAK,QAAL,CAAc,OAAd,CAAsB,OAAtB,CAA8B,SAA9B,CAAwC,IAAxC,CADa,GAEb,QAAQ,CAAC,UAAT,CAAoB,KAAK,QAAL,CAAc,OAAd,CAAsB,OAA1C,EAAmD,IAAnD,CAFJ;AaAJ,AHiBU,AHhCR,ALOE,AMnBE,AR+BF,ACFF,AQ8TQ,AQtXN,ACPD,ANHH,EXkEE,ECVE,EQyBM,AHhCJ,ACZI,ENmBF,COwUE,CT5TA,COnBC,CLOC,EQyBM,AHhCH,ACZG,CE4CC,AVbJ,AiB1DJ5B,ET2BU,CDYF,APmBO,COnBN,ALOD,CQyBD,ARzBE,AFYhB,ACFgB,CCVD,CQyB6B,ARzB5C,CDUgB,IMjBL,CE+UL,ED3VwB,CAAC,AC2VuB,AQtX1C,CVuCiB,QE+UvB,GD3VW,CAA2B,GAA3B,CAA+B,MAAM,CAAC,OAAtC,CAAf;AK4BN,AHiBY,AHjCwB,ALQhC,AFYA,ACFA,AFbM,AU2UA,AUxXR,APRF,CAAC,MAAM,CFiFK,AEjFJ,CHgYE,CT5TA,ACFA,CCVC,EQyBM,CAAC,CRzBd,AFYW,EDfA,CCeG,ACFA,GAAG,AFbF,CAAC,AkB3CE,CjB0DC,AS4Tb,EV3Ua,CAAb,AU2UmC,AUxXhCoC,CFEcd,CPuEf,AX5Bc,AarDnB,CFiF0B,ATfJ,AFbF,AarD1B,CXkE6B,AkB1D5B,CnB4DgB,CAAc,ADfF,AoB7CX,EPRe,EFiFM,CAAC,AVbrC,CA5CI,AD6BE,CCgBN,AiB3DoC,CPuE5B,AX5B0B,AarDE,CbqDD,AarDE,CFiFK,AD+SpC,CR9TW,AFbX,CEakC,CFbD,IW4B/B,KTfS,CAAjB,MWlEoC,CAAN,GAA+B,EAAhE,CAAD,EACK,IADL,CACU,OADV;ACiEA,AHiBW,AHlCG,ALSX,AMpBG,AP8BF,AFbQ,AU2UF,AUxXN,APJJ,IL2CyE,ANmBrE,CMnBU,CCXJ,EDWmE,CAA3E,AEiVQ,GR9TE,CAAC,CO9BK,CW5BN,GpB6CI,AoB7CFQ,CX4BS,EW5BN,ClB0Db,AkB1DcM,GlB0DO,CFbD,AoB7CF,CpB6CG,AoB7CFC,CX4BjB,EAA4B,AP8BJ,AQ8TpB,GAAgD,EUxXxC,ElB0DO,AFbU,CAAC,CEahC,AFb+B,CAAV,AoB7CW,CpB6CG,AoB7CtB,CVwXP,AUxX6B,GpB6Cf,CoB7CkBP,CpB6CG,EoB7CA,CACvCM,IAAI,CAACE,OAAL,EADuC,CAEvC,EpB2CkB,CAAZ,CoB3CHF,CpB2C2D,GoB3CvD,CAACG,WAAL,EAAmB,EAFxB;ANyDJ,ANjBE,ACXM,ARgCJ,ACFA,AFbU,AU4UZ,AUvXC,GD1CerC,KX+EV,EPqBE,CQhCK,AP8BJ,GMnBG,EPqBE,ADfF,CQNG,ECXT,ARgCW,ACFf,EFbe,IQNM,CAAC,CPqBC,CAAC,cOrBX,CAA0B,CPqBxB,CACX,EOtBS,EAAgC,IPqB9B,EAEX,UOvBS,EAAkD,IAAlD,EAAwD,KAAxD,CAAf;AMkBF,AHPe,ARDb,AMpBK,ARiCK,ACHT,AFbU,EGGX,GQCM,AUlFJ,GlBiFI,GAAA;AWSR,AHgBO,AHlCL,ALUE,AFUe,ADbR,AqB5CR,MpB4DK,EEbA,CKVC,CPoBU,EAIX,CEdK,EKVE,AW7CAqB,CX6CC,CPoBG,CEVf,AFUA,EEVgB,IKVX,EAAP,EAA0B;AMmB5B,AHgBK,AHlCD,ALUE,AMpBA,ARkCF,AClFuB,CSkD3B,GHQI,ICVQ,ARkCJ,COxBC,ELUE,AMpBI,GAAG,ENoBZ,CFcW,EEdE,CMpBK,ARkCJ,CQlCK,ARkCrB,GEdE,IMpBY,CAAe,IAAf,CAAoB,gBAApB,CAAZ;AK6BN,ANlBG,ALUG,AMpBA,ARkCF,ACJJ,AFdU,EShBJ,MRkCE,EQlCM,CNoBH,EMpBM,AW5Bf,InB8De,CEdX,CAAa,AHJF,CCkBG,CAAhB,GDlBkB,EShBQ,CAAC,ETgBJ,CAAjB,CGIJ,AiBhDK,CjBgDqB,AHJF,IShBb,CNoBoB,AMpBI,GAAxB,CNoBX,AMpBuC,ENoBF,CMpB1B,CAAX,GNoB0C,SAAL,EAArC;AWSN,AHgBA,ARxBK,AFcD,ADlBQ,AU4UF,AUxXN,APLJ,MF6EM,EVVE,CS0TE,AG7XD,GZmEL,GmB9DOvB,GPLX,CQKG,ARJC,CF4EgB,GAChB,CAAC,CE9EL,EH6XU,AG5XkB,GH4XmB,CC/S3C,ASzEY,ETyEmB,AE7EP,CH4XuB,EG5XD,CH4XH,CC/S3C,AE9EJ,CH6XU,CC/SwC,AE7EE,IF6EhD,KAAmE;AGhBvE,AHiBO,AHpCL,ALWC,AMrBG,ARmCF,ADlBQ,AU6UV,AG7XA,EF6EK,IF9CG,CE8CE,AE7EL,CF6EM,AVXL,COzBC,EKzCE,CZkEC,AYlEA,ELyCV,ACVgB,CRmCH,AYlEA,CAAR,EAAW,CF6EX,AF9CgB,CE+CZ,CVZU,CAAC,EYlEE,GAAG,CJ+BrB,EAA4B,ARmCnB,EAAX,CAtDI,AYZyB,CF6E1B,AVVH,AYnE8B,CF8ER,IADnB,CE7EL,CF8E8B,CE9EU,CAAC,GAAG,EF6EvC,IE7EL,EAAoD,CAAC,EAArD,EAAyD;AC6D3D,AHkBK,AHrCJ,ACVO,ATiBI,AahDR,CF0EJ,AHxCA,SCHc,AI/BJ,GQER,ERFa,EJ+BM,CI/BH,EJ+BM,ATiBN,IahDM,CAAC,CJ+BK,AW3BJ,APJF,CJ+BO,AI/B3B,EQGS,EDCkBU,EpB4CA,EoB5CL,CpB4CQ,AoB5CEI,GAAI,IpB4CC,AoB5CE,CpB4CD,CSjBlB,EAAhB,CW3BwCJ,IAAL,CpB4CF,AoB5CYI,CpB4CzC,CAHkB,CAIlB,AoB7C6C;ANyDzD,AHmBA,ARlF+B,AFqE3B,AoB/DA,WpB+DO,IoB/DA,CAAC,GAAG,CpB+DK,GAAG,AoB/DJ8B,EDCM,CCDV,CAAQ,CpB+DK,CAAC,CmB9DClC,ECDFmC,EDCH,CnB8DrB,AmB9D+BzB,EnB8DE,AoB/Dd,CAAW0B,MDCT,CCDF,ADCsBN,CCDH,KDCjB,EAA6B,SCDP,MAAL,CAAnB,CAAR,CAAJ,CAAP;AP0DJ,ANnBA,ALWA,AMtBQ,ARoCF,ADlBM,AqB7CT,ARJC,ML0CE,APyBA,EQpCM,AI/BJ,EZmEE,GAAG,AmB9DA,APLA,CAAC,IZmEI,AmB9DAC,CnB8DC,CDlBD,CajDV,CAAc,EbiDA,GAAG,AajDjB,CZmEU,AmB9DL,APLT,CZmEE,AmB9DuB,CPLC,GJ+BtB,CW1B0B/B,CX0BK,CDWH,EYrCP,CZsCzB,AYtCmCU,CZsClC,KAAD,EAAwB,CYtCf,CpB4CkC,AoB5CG,CpB4CF,IAAvB,CAA4B,EQNzB,GAAqB,CAAC,CAA9C,KAAmD,CRM9B,EAA4C,CAA5C,CAAb,CALkB,CAMlB;AcYZ,ANlBM,ACZI,ATmBE,AU2UF,AWxXR,ARLI,MJ+BI,AI/BJ,CL2CK,EEkVD,EFlVK,CAAC,ACZA,CAAC,EDYE,AK3CJ,CAAC,KJ+BN,AI/BK,CJ+BY,CI/BJ,EL2CM,GAAG,CAA1B,AK3CS,CH6XL,AG7XJ,CL2C6B,CAAC,CEmVlB,EFnVqB,KAAK,ACZlC,CDYmC,ACZC,CC8VpC,KFlVJ,CCZI,CDY2C,CAAC,ACZC,EDYjD,EAAoD,KCZhD;AK+BV,ANlBQ,ACZC,ARmCH,ADhBM,AU+UR,AGjYC,KAFD,IHmYK,CFtVK,APuBJ,CAAC,AYlEA,GL2CO,GAAG,EEsVjB,GFtVsB,CAAC,CAAD,CAAlB,sBPuBwB,IAArB,CAAL,EAAiC;AaJvC,AbKQ,ADhBI,AU+UT,AGjYG,MAAA,KOKK,CPLC,CZkEC,AYlEA,GOKGV,CPLV,CAAY,EZkEV,AmB7DG,CnB6DU,AmB7DAM,EPLf,EZkEE,CAAkB,MmB7DO,GnB6DzB;AaJR,ANnBQ,ACZA,AToBI,AUgIV,AGlLG,IJ8BG,IDYI,ICZI,GAAG,IAAI,kBAAJ,CAAa,MDYC,ACZd,EAAqB,EDY5B,CAAJ,EAAgC,ECZrB,CAAX;AKgCR,ANnBU,ACZF,ARmCA,AYjEL,IJ8BK,IRmCA,EmB5DE,GZqCO,CAAP,CYrCKN,EXyBM,ARmCJ,CQnCK,CWzBZ,CAAUO,IAAV,CAAeyB,EXyBjB,CAAwB,AWzBtB,CAAmBb,EXyBrB,CAA4B,GAA5B,EAAiC,GWzB/B,CAAgC,IXyBlC;AKgCR,ANnBS,ACZF,ARmCC,ACNF,AFVM,MEUC,cFVK,GEUZ,SAAiC,OFVF,GACrB,IESV,AFTc,CESiC,AFThC,WAAL,KAAqB,oBADzB;AcaZ,ANnBO,ALOD,AFgBC,ACNL,AFTU,AanDV,EX4DA,GkBjEE,CjBuDS,CFUwB,CAQ/B,CCRG,AW5DA,GX4DA,GW5DP,IVkDI,AkB/CH,ClB+CuB,AHCR,cAAc,GACf,IAAgB,CAAC,GqBjDtB,SrBiDK,CAA8B,mBAA9B,CADL;AcYZ,AHiBM,AR1BJ,AMvBI,ARsCA,ACRF,AFRS,AqBlDCL,ADIX,APNF,EVqDC,AMvBI,MY5BQA,CV6EE,ETnBL,CmB1DO,ClBmDhB,CAAY,AHDD,AqBlDOuB,CZ4BD,CAAC,CEiDd,CAAmB,AX3BI,CEQV,AFRW,IGC5B,EQ0BI,AR1BqC,ADOlB,ESmB6B,CFjDhD,CAA2B,GAA3B,AP8Ba,CO9BkB,CP8BH,AFRrB,CAAiC,IStBH,CAAC,EP8BxC,KO9BE,EAA+C,KTsBxC,GStBP;AKiCN,AHiBE,AHrCI,ALQJ,AMpBI,ARsCA,ACRH,AFRS,AqBnDA,ARAZ,OQAG,EbyCU,ALQX,AMpBW,CDYC,CAAR,GLQJ,GAAiB,AMpBb,GTsBY,MGFhB,CHEuB,GAAG,cAAc,CAAC,KAAf,CAAqB,WAArB,CAAhB;AcWZ,AHiBE,AHrCG,ALUD,AMtBC,ATsBO,AU6HV,CFhJF,AChCA,QE8ES,AR3BA,CQ2BC,GDkGG,KP7HT,CHAa,EGAI,GHAT,CAAW,EW2Bd,EAAyC,AX3BtC,CGAR,AHAwB,CU6H1B,EClGO,CDkGsB,ICjGjB,IAAI,KAAK,SAAV,GACP,cAAc,CAAC,OAAD,EAAW,iBAAX,EAAwC,IAAxC,CADP,GAEP,gBAAgB,CAAC,OAAD,EAAW,iBAAX,CAHpB;AGhBF,AHoBC,AHvCD,ALSG,ADQD,AFT2B,AU8HzB,ERrHF,CkBrGiB7C,EF0Bf,WlBkEyB,IEST,AFTa,EAAE,CESf,UFTQ;AcY5B,AHqBA,AFrDA,ARoCM,ACNF,AFV4C,AU+H5C,AQzKD,ALTH,MJ+BM,AI/BA,GHkLG,CRrHC,GDMG,GDhBmC,CU+H5C,CRrHc,CW7DC,CJ+BC,CP8BC,AFVO,CCgBN,AYnEC,CJ+BA,CAAC,CRoCC,ECNE,CW7DL,CZmEO,CQpCN,ARoCO,EQpCE,AI9B5B,GZkEE,EQpCiB,ARoCc,CQpCrC,AI9BU,CAAC,IAAP,EX4DiB,CW5DH,CX4Dd,KW5DoB,CAAC,IAAP,CAAY,QAAZ,CAAd,GAAsC,SAAS,CAAC,MAAD,CADnD;ACgEA,AXVE,AMrBF,ARmCQ,ACNJ,AFXmD,AUgInD,EP7HF,MFcM,EEdE,ADQA,AQqHA,CP7HC,IkBtDD,ADMKgC,CjBgDL,AHH6C,CCiBtC,ACNA,CCRQ,EDQL,AFXQ,AUgIR,GAAa,EAA7B,CAH2B,CAI3B,CRtHwB,CAAC,OAAzB;AYGJ,AXVI,ADQA,AFZyD,AUkIzD,AGlLE,MAAO,EVoDL,EDQE,GCRG,GHJgD,AahDvD,EVoDY,EDQE,GAAG,AFZ6C,EAAE,AahDtC,KX4DF,CAAC,CCRvB,KAAuB,CAAC,GDQ5B,QCRuC,CAAC,KAAD,CAAZ,CUpDzB,CAAyC,EVoDO,KAAK,KAAK,KAAK,KAA7D,CAAJ,EAAyE;AWW7E,AXVM,AFaE,ACLJ,AFbwB,AavB1B,GKjFiBhC,ChBqHf,OCRO,ADQA,CDKC,ACLA,GFbA,CGKN,AFaW,CAAC,EEbC,IDQf,CCRE,ADQkB,CCTqD,AFcjE,CEZN,IFYyB,ICL3B,MDKI,EAAmC;AaF3C,AXTM,AFYI,ACLN,AFbQ,AUkIR,AGzJQ,SHyJH,AGzJU,CZyCT,IDlBE,CCkBG,CAAC,CYzCJ,GZyCF,AYzCiB,CZyCN,EDlBA,ECkBX,ASgHN,CAAuB,CVlIF,CEaP,KQqHd,CVlI4B,AUkIG,CRrH/B,AFb6B,AUkIG,CAAD,CRrHR,CQqHY,CAAJ,EVlIV,GAAiB,AUkIE,CVlIhC,EEayB,CAAC,UAAlC;AYGJ,AXTM,AMvBN,ARmCU,ACLN,AFbO,AUkIL,AGzJF,MJME,IRmCI,AYzCA,CXoCC,CQqHC,GQ3KGG,CjB2DC,ASgHA,CThHC,CYzCb,CXoCA,AQqHe,EG1JQ,CAEvB,EHwJoB,IThHd,GAAsB,GQnCE,CRmC0B,CAAC,CQnCvB,MRmC5B,GQnC2B,GCmJlB,CDnJwC,ACmJT,CAA/B,EAAkC,CAAlC,CAAb;AIlHN,ANrBM,ACXJ,ARmCO,ACLN,AFbM,AatBL,EJKF,ODWc,OCXA,CAAC,EYnCd,KZmCD,CAAwB,IAAD,EDWnB,CACF,CCZ8B,ODW5B,EACkB,Ga/CZ,Cb8CN,EAC8B,OAAA,GAAqB,IADnD,EACuD;AMqB7D,ANpBE,ALUI,AMtBF,ACkJE,AWtLQmB,QbgDN,AahDMA,ElB0DJ,AMtBA,ACkJA,CP5HC,CkB1DO,EXsLJ,AWtLMC,KZoCD,ACkJA,GDlJG,MCkJhB,EAAwB,SP5HP,KAAZ,CAAL,EAAyB,OMtBM,GAAf,CAAmB,mBAAmB,CAAC,IAAD,EAAO,SAAP,CAAtC,CAAlB;AKiCJ,AHmBM,AHxCG,ALWD,AFYA,AClB6C,AFA7C,AUkIA,AWvLI,AR+BR,ILiBK,GahDN,EVwFa,AEzDP,ELiBO,CPuBJ,COvBM,ALWL,AFYA,ASgHA,CC/FP,AXnCO,CWmCS,CEzDlB,CZwCa,CDlBY,CAAC,AarBtB,CZuCY,EEZZ,CQ6BF,AR7BiB,CU3BV,CFwDyB,CVjBZ,ADlBb,CCkBc,CEZnB,GAAuB,AHNW,IGMlC,AFYY,CSgHZ,CThHI,ASgHyB,CGvJ7B,CAAoB,CHuJpB,CVlIA,AUkIiC,EThHE,ADlBW,EUkI9C,EThHA,ASgHuC,CAAvC,CThHyC,eYvCI,CAAC,QAAD,EAAW,IAAX,CAA7C,IACA,KAAK,gBAAL,EADA,GAEA,KAAK,OAAL,IAAgB,EAHpB;ACuCJ,AHmBE,AHzCiB,ALYZ,AMvBH,ARmCM,ADlBA,AanBP,MLagB,ECXX,CEoDC,CAAC,EXnCA,KSjBO,ATiBF,CAAC,ISjBM,ATiBZ,CAAW,IWmCZ,AXnCC,EWoCA,EFrDN,EAA6B;AKkCjC,AHoBU,AH3CQ,ALab,AMvBC,ARmCI,ADlBA,AUiIF,AGnJN,EFsDQ,GH3CF,CGyCC,AFnDH,ECkJE,GC7F6B,CXpC3B,GSjBK,CAAC,ETiBA,AUiIE,CVjID,AUiIE,IAAX,CAAgB,CDlJlB,CAAoB,ECkJlB,EVjIE,GSjBJ,ATiB0B,CSjBG,GTiByB,CAAC,ISjB3B,GTiBxB,CSjBqC;AKkC/C,AHoBI,AH5CyB,ALc1B,AMvBK,ARmCE,ADlBD,AUiIF,IFzIsB,MG4CnB,IFrDI,MEqDM,GAAG;AGnBvB,AHoBM,AH7CE,ACTO,ARoCL,ADlBH,AUiIF,KAND,CCvFE,AH7CgC,GG6C7B,AX5EH,CSsBS,EEsDN,EH7CP,CAD2D,ARUhD,AqBxDA,CbgDX,CCVoB,EAAE,ATkBP,IAAI,CAAC,QAAL,KAAkB;AciBnC,AHoBQ,AH5CN,ALcA,AMzBuB,ARqCf,ADnB2B,AanB3B,EV0BR,MAAM,CU1BS,CZsCP,CEZF,CMzBiB,GEuDV,CVlBC,CAAC,GUkBG,KExDV,GZsCA,AYtCuB,EFwDlB,CAAgB,AVlBA,KAAK,CAAC,GAAN,EAArB,EUkBK,CAA8B,QAA9B,CAAP;AGnBR,AHoBO,AR9BH,AM1BoB,ARsCd,ADpBG,AUkIT,AGpJA,OFqDmB,CXnCoC,ECoBjD,CEZC,AO0HA,GT9GG,GAAG,IS8Gb,ET9GmB,CAAC,QAAP,EAAP,KEZa,KAAK,KAAjB,CAAP,EAAgC;AWWpC,ANzBE,ALeI,AM3BQ,ARuCL,ADpBD,AUkIL,AGpJC,MLWE,MLeM,AM3ByB,CDYxB,GROC,EQPI,ECZV,ATmBU,CGQG,AM5B0B,CDazC,ACXE,CTkBc,CGQE,EKfE,CROS,CAAC,CGQP,GHRrB,CQPyB,CLe3B,IKfgC,SAApC,EAA+C;AM0BjD,AHmBM,AH5CF,ALeE,AFYC,AS+GL,AGrJE,ILWA,EG4CE,CV1C+B,CA2B/B,GO7BK,ALeA,CKfC,IG4CI,AR7BV,EQ6BY,CR7BC,GQyBI,CHxCnB,CAAoB,IAApB,KLeE;AWWN,AHmBM,AH5CF,ALeE,AM3BE,ATkBA,AajBJ,MFuDE,AR7BA,QM3BQ,ATkBF,CGSG,CAAC,EQ6BE,AXtCF,CAAC,AqBxDd,CV8FiB,AR7BL,AM3BK,CN2Bd,EM3BiB,GTkBX,CSlBe,ATkBF,GSlBF,EAAf,CTkBI,KAAwB,CAA5B,EAA+B;AcoBvC,AHauB,AHtCpB,ALeE,AM3BG,ATkBE,AajBN,KFiDA,GFlDI,KAAK,CAAC,IAAN,ATkBQ,CSlBG,KTkBG,ESlBI,CAAC,ATkBF,IAAI,CAAC,UAApB,CSlBS,CAAyB,OAAzB,CAAX,EAA8C,OAA9C,CAAuD,CAAD,IAAe;AKsC7E,AHmBI,AFxDM,ARuCJ,ADrBI,AajBN,UJDM,ARuCA,CUiBE,GVjBE,CUiBE,AVjBD,CQvCC,CAAC,CTkBD,CCqBN,CUiBW,AFxDX,CAAW,CAAX,ERuCc,CDrBD,GAAG,CWsCf,CVjBL,EUkBE,AVlBwB,ADrBF,CAAC,KAAL,CAAW,IWuClB,CAAC,MXvCM,CAAhB,GWuCS,EAAa,iBAAb,EAA0C,IAA1C,CADR,GAEH,aAAa,CAAC,UAAD,EAAa,iBAAb,CAFjB;AGlBJ,AHqBG,AH/CD,ALeE,AM1BK,ARuCD,ADrBE,AajBN,GF4CF,KHlCM,ALeA,CM5BA,CIGE,GVyBG,CKfC,AP4BA,GO3BR,CLcE,AFaU,ADrBF,EajBI,CZsCC,EEbE,AUzBA,ELWT,CAAC,AP2BW,CDrBD,CajBG,EbiBA,IajBxB,CZsCiB,CAAe,CEbhC,AHR+B,CAAC,CGQH,GKd3B,CAA0B,CRMJ,GAAiB,CAAnC,CAH6B,CQHjC,AROI,EQP+B,IP2BpB,CAAoC,KAAK,MO3BxD,CP2Be,CO3BsC,AP2BnD,IO3BF,EAA2D,KAA3D,CADJ;AM2BF,AHqBC,AH9CC,ALcI,AM1BE,ARuCA,ADpBE,AalBN,MLWE,EP2BE,EYtCE,EZsCE,CAAC,EO3BE,AarDE,CR0CD,ELWE,CarDGmB,AR0CW,EAA5B,CQ1Ca,MpBgFT,CAAqB,IAAK,CAAC,cO3Ba,CAAC,AP2BzC,IQvCwB,CDYgB,CAA9C,MCZM,EAAkC,MAAlC;AKsCR,AHsBA,AH/CE,ALcG,AM1BE,ACqJL,MFzII,CCpBA,UDoBW,GAAG,CAAlB;AM0BF,ANzBE,ACZG,ARsCG,ADpBE,AalBN,MLYE,EKZE,KZsCK,AYtCA,CAAC,GLYG,ARMF,GQNK,AP0BZ,CO1Ba,AP0BA,ADpBF,AalBX,CLYN,ARMkB,AalBE,GZsCd,ADpBe,CCoBG,ADpBhB,EAAgB,CAAC,CCoBnB,EDpBsB,AalBtB,CAAJ,EAA+B,MbkBzB,EAA+B,CAAC,EAAhC,EAAoC;AcoB9C,AXZI,AMzBD,ARsCI,ADpBK,AalBN,GJbJ,IR+CI,EETG,GUzBG,CZsCC,KEbT,AHPY,CGOG,GUzBG,EbkBV,CGOR,AUzBqB,aAAa,CAAC,UAAD,CAAhC,CAD6B,CAE7B;ACqCN,AN1BE,ALcC,AMzBF,ARsCO,ADpBI,AUiIF,AGlJJ,CJhBN,QD0BS,AEwIQ,IT7GJ,EO3BE,CAAC,EROA,CAAC,CCoBT,CAAa,CDpBD,EQPX,CP2BD,CO3BN,AP2BwB,EO3BE,CP2BC,ADpBF,CAAC,CAAD,AUiIjB,CVjIE,ECoBsB,AS6GK,ST7GV,CAAe,0BAAf,CACjB,IADiB,EACA,IAAI,CAAC,IADL,EACW,IAAI,CAAC,OADhB,EACyB,KAAK,OAD9B,CAArB;AaAR,AN1BI,AP4BG,AS4GH,AGlJE,ILUF,WAAW,IavDZ;APkFH,AN1BI,ALlBsB,AMO1B,ATiBY,AUkIR,AGlJE,MJDA,ECmJE,CAAC,CFxIC,IEwII,IVlIE,CAAC,CQNG,ACXA,GDWG,ACXA,CTiBD,EAAV,CSjBe,CTiBD,AUkIjB,CFxIoB,AEyIjB,CFzIkB,ACXP,EAAvB,SDWI,aEyIiC,CAAC,kBAAD,EAAqB,IAArB,CAD5B,CAAL,EAC8D;AI9GlE,AXZA,AMxBA,ARqCM,ADrBQ,AUmIR,AGnJA,MZqCA,KS8GK,EWlMT,EpBoFa,CDrBD,MAAM,GAAG,EUmIjB,GAAwB,IAAI,GVnIC,AUmIL,CWjMR,CrB8DR,AUmIR,CAD4D,CAE5D;AI/GN,AN3BI,AP4BC,ADrBQ,AqB9DT,QbuDI,ORKI,AqB5DD,GbuDO,EavDFI,CrB8DG,EQPI,OAAnB,EAA4B,AavDrB,CAAkBC,IAAlB,KAA2B,CAA3B,GACH,KAAKJ,KADF,GAEH,KAAKA,KAAL,CAAW1B,MAAX,CAAkBT,IAAI,IACpBA,IAAI,CAACO,IAAL,CAAUiC,IAAV,CAAetB,GAAG,IAAI,KAAKoB,YAAL,CAAkBG,GAAlB,CAAsBvB,GAAtB,CAAtB,CADF,CAFJ;APmFJ,AHoBM,AH/CA,AROQ,AUmIR,AW7LH,ARyCG,MLUA,GG+CU,GD2FJ,AGpJA,KFyDN,AH/CW,CG+CQ,EH/CL,AKVA,EbiBA,CajBG,GFyDjB,CXxCmB,AUmIE,CC3Fc,EH/CX,AROF,AUoIlB,CF3IqB,EKVE,CAAC,CLUJ,CAAxB,AE2IU,CAAC,QGrJM,CAAuB,CAAC,GAAD,CHqJpC,CVpIwC,AUoIlB,AGrJoB,CbiBD,AajBL,GHqJpC,CVpIkB,CAA4B,AUoIlB,AGrJmB,CbiB7B,CAAd,cUmIR;AI9GN,AHoBE,AH/CI,AP4BF,AYtCI,MLUF,EP4BE,AYtCA,CFyDC,CAAC,CEzDC,CAAC,CLUC,CAAC,CKVN,CAAQ,CAAR,EADiD,CAEjD,ILSF,CAAoB,AP4BtB,EUmBK,AVnBa,EUoBZ,QHhDJ,CAAiC,IAAjC,EAAuC,OAAvC;AM4BN,AHqBU,AHhDL,AP4BC,ADtBQ,AUoIR,EC1FI,IAFD,AVlBH,IS8GI,CC1F2B,GVpBvB,CAAC,KDtBG,ICsBZ,CAAmB,ADtBF,AUoIE,KVpIG,AUoIE,GT9GxB,CDtBY,IAAkB,CUoI9B,EAAmC,KVpIG,CAAC,KAAK,CAAC,CAAD,CAAN,EAAW,oBAAX,CAA9B,EAAgE;AcsB9E,AHqBI,AVpBE,ADtBU,AUoIR,AGpJA,MZsCF,ES8GE,EC1FE,KE1DK,GbgBC,AahBR,CbgBS,CW0CG,AVpBA,CAAC,CDtBD,CW0CG,AX1CF,AUoIE,CVpID,AUoIE,IT9GlB,CAAuB,ADtBT,CAAQ,CAAR,AUoIZ,CACI,CVrImB,AUqIlB,CAAD,EAAyB,CT/G/B,AS+GM,CVrIwB,CAAC,GUsIrB,EVtII,GUsIC,CVtIyB,KAAK,CAAC,CAAD,CAA/B,GACA,IUqIJ,CVrIS,AUqIc,CVrIb,CAAD,CAAL,AUqIJ,CVrIa,AUqIc,CAA3B,EAA8B,CAA9B,CVrII,AUmIZ,CVnI2B,CAAf,EAAkB,CAAC,oBAAoB,CAAC,MAAxC,CADA,GACkD,KAAK,CAAC,CAAD,CAD3D;AcsBhB,AHqBM,AHjDF,AP6BC,ADrBU,AUqIR,AGtJA,MF0DD,CE9DiB,EF8Dd,AE1DA,ELSE,CGiDF,CUrGP,AR2CW,GAAJ,EAJc,CAAjB,CLac,AKpBe,CAY7B,ILQmB,CAAC,CAAf,IAAoB,KAAK,CAAC,MapDd,GboDa,CAAL,CAAiB,KAAjB,KAA2B,WAAtD,EAAmE;AM6BvE,AHqBQ,AHjDF,AE6ID,AWjMD,aAAKiB,EVqGM,GUrGX,EVqGgB,CUrGH,CAAC,MAAMO,EVqGT,CAAgB,gBAAhB,CAAiC,CUrGZC,OVqGrB,AUrGS,CVqGhB,AUrGoC,OAApB,CAAP,KAAwC,EAArD;APiFJ,AHqBO,AHjDD,AP4BF,ADrBU,AUsIX,AWjMA,AR2CG,MAAA,CFuDiB,GH9Cb,CP4BC,GYrCG,CAAC,CbgBD,GCqBV,EO5BiB,CROD,AahBd,CAAkB,CLSA,AKTD,CLSjB,AROiB,EQPI,CKTG,KbgBC,CAAC,AahBI,CAAC,OAAP,CAAe,CAAf,CAAxB,GbgBiB,CAAwB,CAAxB,CAAT;AcsBd,AN5BQ,AP4BL,ADrBU,AUuIX,AWjMA,AR0CG,KAdD,MAcO,ILSI,AKTA,SLSS,CKTb,EAAgB,ELSE,CAAC,CAAtB,EAAyB;AM6BjC,AHoBM,AHhDI,AKTJ,MFyDA,AEzDA,ILSI,EKTE,CAAC,ELSE,CGgDC,AHhDA,CKTV,CFyDY,AEzDA,IFqDK,GH5CR,CAAL,CAAiB,CKTrB,ILSI,IAA0B,WAA1B;AM6BV,AHoBM,AHhDI,APvGmB,AD6GjB,AafP,MFyDC,IHhDI,IRME,IW0CM,CHhDC,CGgDC,AX1CF,CAAC,CQNG,WRMV,CAAoB,MAApB,EAA4B,IAA5B,MQNwC,CAAC,KAAD,EAAQ,SAAR,CAA1C;AM6BV,AHcuB,AH1Cd,ALYH,AHNM,KWoCR,CR9BS,QAAP,CAAe,IHNJ,KAAL,CAAW,IAAX,CAAgB;AcuB5B,AHoBI,AR9BF,AHb2B,AafzB,EV4BF,SQ8BU,AE1DD,EV4BT,CAAY,CQ8BE,CX3Ca,CafzB,GF0DiB,AX3CY,CGa/B,CHbiC,CGaC,KHbR,CW2CjB,GACH,WAAW,CAAC,UAAD,EAAa,iBAAb,EAA0C,IAA1C,CADR,GAEH,aAAa,CAAC,UAAD,EAAa,iBAAb,CAFjB;AGnBJ,AHsBG,AHnDK,ALeN,AHVyC,AadxC,GF+CD,MRvBA,KAAA,EHVyC,CGUxB,IHV6B,EAAE,EAAE,CGUlD;AWeF,AHsBC,AHnDM,ALeG,AMvBV,ATY4B,AaJ1B,MJRI,GNuBI,MHXE,QGWF,GAA0B,CMvBT,GACvB,CAAC,INsBK,OMtBN,EAAgC,QAAhC,EAAoD,SAApD,KAAyE;AKqC7E,AXZI,AMxBE,ATWK,ESXL,ONwBG,IHlC8B,AqBrCrC,CrB2DQ,EGYN,AMxBgB,CAAC,ENwBF,CMxBb,CAAmB,KNwBrB,IMxBE,EADuE,CAEvE,MYhDaxD,EAAjB,EAAqB;APoFvB,AHsBA,AHpDM,ALkBH,AHZO,AqB3DN,MVyGE,AHpDA,OarDGyD,EbqDM,EGoDE,CHpDC,EGqDd,CAAC,AU1GD,GAAgB,CAAC,KAAKA,CV0GtB,EAAiC,KAAjC,AU1GA,EV0GgD,IAAhD,IHrD4C,CGqDyB,AHrDxB,KAAD,EAAQ,SAAR,CAA1C;AM+BN,AHuBM,AHrDD,ALmBH,AMzBI,ACoJJ,AWnMC,EV0GG,MAAM,AF3DA,CE2DC,ADyFJ,KDpJS,GAAG,ME2Df,ADyFJ,CCzF0B,AD0FtB,IDrJ0B,ACoJ9B,CCzFI,AF3D2B,CCsJ3B,CC3F6B,IAA7B,EAAmC,AD2FnC,GAA+B,KDtJhB,CAA6B,CE2D5C,MF3De,CAAf,YCoJJ,EAE6D;AIjH/D,AHuBK,AHrDF,ACNG,ACsJF,AWpMF,AdrDF,CI2JA,OFxDY;AKqCZ,AN9BC,ACPY,ATWH,AU4IN,IDvJS,YTWC,OAAO,CAAC,SAAD,CAAP,KAAuB,EAA3B,EAA+B;Ac2BzC,AHuBA,AF7DY,ATYA,AU4IR,AH1PJ,MI+JM,AF7DiB,MAAjB,CAJuE,CAKvE,ATWM,KWiDO,CXjDD,CAAC,CWiDG,CAAC,UAAD,AXjDV,CAAoB,CWiDuB,OAAjC,IXjDsB,EWkDvC,AXlDO,EAAoC,IAApC;Ac2BZ,AHwBM,AXlDM,AU4IR,AGjJQ,EFuDN,AEvDM,IFuDF,EAAE,CD0FH,GGjJa,EbKV,CaLU,CFsDjB,WXjDoB,CAAC,GU4ItB,CV5IQ,CAAmB,IAAnB;Ac2BZ,AHwBM,AF9DA,ATYK,AaLP,ANxGJ,EI+JM,IF9DI,IIOA,CFuDK,CF9DC,CE8DC,AXrDP,ISTW,CAAf,CTYW,CSZO,AIOpB,IFqDC;AGrBL,AHwBM,AF9DE,ATYK,AU2IT,AGhJC,EFuDC,GAAG,EAAE,EDyFF,AGhJ8C,KFuDrC,AXlDL,CWkDM,GAHd,AX/CqB,CAAC,AaLtB,GACG,CbIK,EU2IT,CV3I8B,AU2IP,CG/Id,EH+IT,CAA2B,GV3IU,CAAC,AU2ItC,EAAiC,OV3II,AU2IrC,AG/II,CbIK,CUsIkD,AG3I1D,CHiJD,AGnJkB,CAIlB;AC8BJ,AHwBM,ARrCJ,AMzBM,ATYG,AU4IP,AG/IA,AN1GJ,EI+JM,ARrCJ,UAAU,CAAC,AH1C0B,CA8B7B,QGYE,EAAgB;AWc5B,AHmBK,ARhCD,AMzBI,ACwJJ,AG/IA,CF+CkB,CAAtB,OR/BS,IkBzEP,KlByEE,GAAiB,SAAS,CAAC,KkBzEf,MlByEK,CAAsB,6BAAtB,CAAjB;AWcJ,AXbI,AMzBI,ACwJJ,AWzMc7C,AdjDlB,IEkGQ,IYjDUA,ClB0ET,CMzBK,CAAC,GYjDS,ElB0EpB,AkB1EsB,GlB0EP,AMzBX,CAAiB,QNyBG,CAAC,WAAV,CAAsB,AMzBjC,CAAuC,QAAQ,CAAC,OAAhD,EAAyD,SAAzD,CNyBW,CAAf;AWcJ,AHwBA,ARrCG,AMzBK,ATWE,AU6IN,AW1MwBC,AR0DxB,MFsDE,EEtDE,EQ1DoBA,ErB6DlB,EaHI,CAAC,MbGI,IAAI,AaHf,CFsDkB,GACtB,AEvDyB,CFuDxB,IXpDK,AaHwB,GFuD9B,EAAmC,KEvDV,EFuDzB,KAA4D,KEvDR,MAAM,CAAC,UAA3D,EAAuE;AC+B3E,AHyBM,ARrCJ,AM1BK,ATWE,AqB9DiB,AR2DpB,AN3GN,SIkKM,EEvDK,IFuDL,CAAA,MAAA,AEvDA,CFuDA,EAAA,EACK,OADL,EACY;AGzBlB,AH0BQ,AXrDD,AqB/DS,AR4DX,IFwDG,GUpHN,ErB4BW,AqB5ByB,GVoHtB,CAAC,EXrDJ,GWqDG,CXrDC,CWqD6B,GXrDzB,CAAC,QAAL,KAAkB;Ac4BnC,AH0BU,AFjEJ,ATW+B,AU4IjC,AW1MA,AR4DD,AN3GH,MImKU,EFjEE,ACuJJ,ICtFQ,CAAC,AUpHRmC,EX0MM,CAAC,EW1MZ,CVoHM,CACI,CUrHG,CZmDS,AYnDR,GVqHC,AFlEU,AYnDR,CVqHD,ADqFZ,IAAsB,AW1MJA,GZmDW,CAAC,CEkExB,ADqFqB,AW1MlB,CVqHa,CUrHGnC,IAAhB,CAAb,CVqHiC,CAAC,ADqFR,CAAe,ECrF/B,AFlEe,CEiEnB,AFjE0C,EEkEiB,KFlExC,CAAvB,CEiEI,AF9EmE,CAcvE,CCsJwB,CAA8B,IAA9B,CAA1B,EAA+D;AI/GnE,AH2BS,AFjEH,ATSO,AU6IP,AG7IJ,QbA4D;Ac8B9D,ALtCM,ATSE,AU6IH,AW3MD0C,Ad/CJ,cP6Ga,IAAgB,CAAC,IAAjB,KAA0B,CqB9DvBG,KrB8DR,EAAuC,AqB9D3C,CAAoB,OAApB,EAA6B,KAAKV,KAAlC;AP4FJ,AHqBkB,AF3DZ,ATSI,GWiDJ,CAAA,cXjDU,MAAM,GAAG,IAAI,CAAC,UAApB,CADqC,CAErC;Ac6BV,AH0BK,AFhEC,ATUI,AU2IN,AW3MA,Ad/CJ,CI4JA,SD8FU,GAAG,AW3MJS,GX2MO,KW3MZ,EX2MmB,CW3MH,GX2MJ,EW3MZ,GX2M4B,QAAhB,GAA2B,MAAM,EAAjC,GAAsC,KAAK,IAAI,EAA3D;AI9GJ,Ad5BU,AU2IN,AW3MD,IX2MC,MAAM,CAAC,cAAP,CAAsB,KAAK,SAA3B,EAAsC,IAAtC,EAA4C;AI9GhD,AH0BA,AFjEM,ATWI,AU2IJ,AW1MJ,Ad/CF,MIoKM,CFjEK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,EEiEF,GACpB,CFlEE,EAA4B,CAAC,EAA7B,EAAiC;AKwCvC,AH2BI,ARzCF,AMzBM,ACsJF,CCpFD,CRzCH,IO6HI,ECpFF,CDoFK,CCpF8B,AFlEzB,ECsJL,GCpFL,AFlEe,EEkEgC,ARzClC,CAAC,AMzBI,GEkElB,ARzCa,EAAU,CMzBC,CAAC,CEkE2C,AFlE5C,CAApB;AKwCR,AH2BM,ARzCF,AMzBI,ATUE,AU4IF,AH1SR,EIsNM,EFlEE,IEkEI,CAAC,ARzCJ,AMzBI,CAAC,KEkER,ADoFS,CCpFK,AXxDN,EGeV,EMzBI,ATUU,AU4IE,CCpFK,ARzCJ,AMzBK,ATUP,CWwDO,CDoFX,CP7HX,AO6HI,ECpFiB,CAAnB,EAA2B,GFlEzB,CAA8B,GEkEhC,AXxDQ,ESVN,GTU+B,IAAzB,IAAiC,KAAK,KAAK,aAA/C,EAA8D;Ac8BxE,AH2BK,ARzCD,AMzBI,ATUI,AU4IL,CCxFP,GF9DQ,GCkJwC,EPzHvC,KHfG,EGeR,EMzBkB,CNyBH,AMzBI,ATUN,GGeK,CAAC,OMzBf,INyBJ,AMzBmC,KAAK,CAAC,WAArC;AKwCR,AH4BA,AR1CG,AMzBI,ATUK,AaFA,EAAA,CJ/BiE,CAwBvE,UTSM,IaFgB,EbEV,CAAC,AaFS,YbEhB,CAAoB,YAAY,EAAhC,EAAoC,IAApC;Ac8BZ,AXbE,AHhBS,AU2IL,AG7IF,MH6IE,GAAG,CAAwB,CG7ItB,IH6IF,CG7IO,CH6I+B,WG7IpC,CAAkB;ACgC7B,AJ8GQ,AG9IsB,MAAA,IAAI,EAAE;ACiCpC,ALxCM,ATUI,AU4IF,AG/IqB,EJPvB,GIOK,CAAP,MbGM,CqBjER,CX6MY,QAAQ,GV5IC,AU4IG,GV5IA,ESVQ,ACsJK,CDtJJ,ETUzB,CU4IgB,CAAlB,CAFuC,CAGvC,CW9MU,EZuDgB,CAA5B,CAzBuE,CA0BvE;AKwCN,ALvCM,ATSI,AqBlEU1C,AR+DjB,QQ/DiBA,MAAM,EAAE,CrBkEb,KAAL,CAAW,IAAX,CAAgB;Ac+B1B,Ad/B2B,AU6IlB,AW/MqBgB,ARiE5B,UQjE4BA,GX+MR,CV7IK,EU6IlB,EV7IsB,EAAE,AU6IJ,KAApB,CV7IiB;AcgC1B,ALxCM,ATQmC,AqBlEb,QZ0DhB,MTQ6B,CSRtB,GAAG,QAAQ,CAAC,OAAT,CAAiB,OAAjC;AKyCN,ALxCM,ATOoB,AU8IlB,AWhNU,OAAhB,EAAqC,IrBkE7B,AU8IG,EVzJkC,CAYrC,WU6IF,CAAoB,IAApB,EAA0B,QAA1B,IDrJqB,QAAvB,EAAiC,cAAjC,EAAiD,OAAO,CAAC,UAAzD,EA7BuE,CA8BvE;AKwCN,AXfE,AMxBI,ATOI,AU6IH,AWhNH,ElBoFF,KOiH8C,KWrMxC,IlBoFQ,CAAC,AkBpFJoB,IlBoFG,EAAe,MkBpFvB,CAAkBG,GAAlB,CAAsBvB,GAAtB,CAAJ,EAAgC;APoGpC,AXfI,AMxBE,AY5DA,IlBoFF,IAAI,CAAC,MkBpFEoB,ElBoFP,CAAc,KAAK,IkBpFjB,CAAkBQ,IlBoFN,EkBpFZ,ClBoF6B,AkBpFJ5B,GAAzB,0BlBoFF;AWgBJ,AdjCU,AU6IJ,AW/MD,MX+MC,GWjNF,MAEO,CrBkEG,EU6II,EV7IA,AU6IE,CV7ID,GUiI6B,QVjIlC,KAAqB,IAAzB,EAA+B;AckCzC,AXhBI,AMxBE,ATOO,AU6IP,AW/MA,EZ2DA,ENwBF,EO4HE,EP5HE,AMxBI,CNwBH,AMxBI,KTOA,CqBlEFoB,CX+MK,CP5HZ,AMxBE,CNwBY,AMxBK,ATOM,AU6IX,CV7IY,IGiBP,AHjBV,GAAwB,CqBlE/B,CrBkEO,AqBlEWS,ElBmFN,CkBnFZ,CAAsB7B,ClBmFK,EkBnF3B,IZ2DA,CAAuC,QAAQ,CAAC,OAAhD,EAAyD,INwB3D,KMxBE;AKyCN,AXhBG,AMxBG,ATOK,AU+HqC,AWjM3C,AdxFL,KGyRI,GDtIQ,KAAK,ATKP,GSLU,GTOH,ISPU,CAAC,aAAR,CAAsB,OAAtB,CAAd;AKyCN,AXfE,AHlBU,AU6IT,cV7IS,aAAa,CAAC,IAAd,CAAmB,IAAnB;AckCZ,ALzCM,ATQM,AU8IV,AWhNE,MZ0DM,MAAM,CAAC,AY1DR8B,CrBkEG,KAAK,ESRP,CAAiB,IY1DvB,CAAmB,OZ0Db,IAAiC,GY1DvC,EZ0D4C,KAAK,IAA/C,EAAqD;AK0C3D,ALzCQ,ATQG,AqBlER;APoGH,ALzCQ,AIOI,EAAA,WAAW,GAAA;ACmCvB,ALzCQ,ATOE,AaAN,IJPI,MIOE,EbAA,GSPS,CAAC,AIOJ,GAAI,EbAD,GaAM,IJPjB,CAAyB,KAAK,CAAC,AIOnB,CAAuC,OAAvD,CJP6B,CAAgB,IAAhB,CAAzB,EAAgD,WAAW,CAAC,UAA5D;AK0CR,ALzCO,ATOE,GSXH,MAIO,ETdL,MAqBO;AcmCf,ALzCQ,ATOE,AaDN,QAAI,KQlEN,CRkEY,CAAC,CbCD,CAAC,GAAG,CAAC,AaDX,CbCE,IaDgB,CAAtB,EAAyB,EQlElB;APsGX,AXjBE,AMxBM,AY5DJ,ARkEE,EVkBJ,akBpFS1D,ElBoFM,CAAC,GAAD,EAAc,QkBpFf;APsGhB,AXjBI,AMxBI,ATME,AU8IE,AG9IP,IVkBD,CUtBmB,CAKnB,CViBG,CAAC,CO4HW,OP5Hf,CAAa,AO4HL,EV9IK,CAAC,AU8IS,CV9IR,CGkBG,EHlBC,IAAgB,CAAC,EGkBvB,CkBpFe,CrBkET,CGkBW,AHlBW,GqBlER2D,IrBkEd,CAA8B,MAA9B,EAAsC,CAAC,EqBlER,CrBkEW,CAA1C,CAAN,MAAwD,CGkBrE,AHlBsE,CAAhE,EAAmE;AcoC7E,ALzCQ,ATMI,AU8IR,AG7IA,QH6II,KAAK,cAAL,CAAoB,yBAAyB,CAAC,WAAD,EAAc,IAAd,CAA7C,KACA,KAAK,SADT,EACoB;AI3GxB,AXlBI,AMvBI,ATMI,AU+IN,AG9IF,SVgBK,CkBnFC,KAAK1C,ClBmFX,GAAe,AkBnFT,CAAUyB,ElBmFE,CAAC,AkBnFb,CACAd,GAAG,GlBkFT,CkBjFQ5B,gBAAK;APoGjB,AXlBI,AMvBI,ATMI,AU+IP,AG9ID,IVgBA,CO0HuB,CAKvB,CP/HG,CAAC,OAAJ,GAAc,KAAK,SAAnB;AWmBJ,AXlBG,AMvBK,ATMI,AaCR,uBQjEmB4B,GAAI;APoG3B,ALzCQ,ATMI,AOxJZ,mBPwJiB,KAAL,CAAW,CqBhEG,GrBgEd,CAAgB,CqBhEGoB,YAAL,CAAkBG,GAAlB,CAAsBvB,GAAtB,CAA2B;APoGrD,AXlBE,AMvBM,ATKqB,AU+IzB,EP7HF,EMvBM,MNuBE,AO6HA,CP7HC,AMvBI,CAAC,INuBN,AHlBmB,EGkBJ,CO6HN,CV/Ic,EAAE,AU+Ib,EDpJd,CAAqB,AY1DJ,GrB+DG,AU+IA,CAAC,CW9MCgC,SZ0DtB,EAAqC,ECoJvB,CAAsB,CW9ME,GZ0DM,ACoJ9B,CDpJ+B,ACoJjD,UDpJI;AK0CR,AH0BO,AR5CH,AMvBI,ATImC,AaCvC,MF8DS,EE9DL,CVkBC,CMvBK,IIKA,CAAC,CbD4B,CSJtB,CEmEI,CU7HNhC,CZ0DK,CEmEK,AX/DmB,CqB9DzB,ClBiFnB,AHnB8C,AaC1C,CJLoB,ATIuB,EGmBzB,CMvBF,CEmEI,AE9DA,CJLpB,ENuBJ,CQ6CA,KE/DI,IAAiC,CAAC,MAAM,CAAC,QAAP,CAAgB,YAAtD,EAAoE;ACqCxE,AH2BI,AR7CD,AMvBK,ATGoB,AUgJxB,AG9IE,IJLE,EIKF,EH8IE,GDnJO,CAAC,AIKJ,CAAC,EJLL,ATGI,AUgJG,CDnJK,KIKd,CAAgB,EH8IE,CAAC,KDnJjB,GCmJA,AG9IF,CAA4B,IH8II,UAAlC,EAA8C,KG9I5C,CACI,MAAM,CAAC,GAAP,CAAY,CAAD,IAAO,CAAC,CAAC,OAApB,CADJ,EACkC,KAAK,SADvC;ACqCN,AH2BI,AFpEI,ATGI,AUgJN,AG7ID,ANnJL,KMgJI,CHgJE,KG7IK,EQzED,CrBsEE,AqB5DF,CX4MK,AG7IA,CH6IC,OVhJK,CUgJf,yBDnJ0B,CIMrB,EAAiC,KJNpC,EAAkC,OAAlC;AK0CR,AH2BI,AR7CF,AMvBK,ATGI,AUgJN,AG7IE,ANlIP,EJmJE,MAAM,GAAA,AUjBI,UAAL,CAA+B,kBAA/B,GACG,MAAM,CAAC,GAAP,CAAY,CAAD,IAAO,CAAC,CAAC,UAApB,CADH;ACoCP,AH2BI,AR7CA,AMvBC,ATGI,AaIJ,ANnIL,CEsEA,II0DW,MVmBA,AUhBA,4BVgBY,KAAK,cAAjB,CAAP,EAAyC;AWmB7C,AH2BK,AR7CC,AMlBN,ATFO,AU+IH,AG3IE,ANnIN,CIgMM,QD8EG,CW3MC,ElBgFE,GkBhFG0B,GV6HV,AD8ED,EC9E0C,CR7CzB,AO2HA,EW3MX,CV6HL,AR7CmB,CO2HpB,CW1MQtD,GV6HF,AR9CmB,IQ8Cf,KAAK,IU7HF,ClB+EX,IQ8CG,GACA,kBAAkB,CAAC,OAAD,EAAU,iBAAV,EAAuC,IAAvC,CADlB,GAEA,oBAAoB,CAAC,OAAD,EAAU,iBAAV,CATtB;AGpBP,AXlBM,AHpBD,AaIC,ANnIN,CAAC,IPZiE,CA6I9D,COjIG,CAAC,GJmJG,cAAL,AInJC,CAAN,EJmJ2B,GInJG,IcoEI,EdpEE,CAAC,EcoEE6D,ElB+ElC,WkB/EgD,EdpEjB,CAAN,GAA4B,EAA1D,CAAD,EAAgE,IAAhE,CAAqE,OAArE;AOsKA,AXlBM,AO0HF,AG1IE,ANlIN,MJkJM,GO0HG,EG1IE,EQlED,ElBkFK,CAAC,AkB9EJ,EAAG,ElB8EA,CAAT,UO0HF,GAXuB,CAYvB,IG3IE,GAAoC,IAApC;ACmCN,AXlBK,AUhBA;ACmCL,AdtCI,AaID,SbJM,GqB1DG,GrB0DG,CAAX,CqB1DaC,GrB0DG,UqB1DR,CAAmBpB,ErB0D3B,CqB1DQ,CrB0DuB,AqBzDvBhC,IAAI,IACFV,gBAAK;AP+FnB,AXnBI,AHnBE,AU6IF,MV7IE,CAAC,CAAC,CU6IC,CP1HC,KAAK,GAAG,AHnBZ,CAAc,IGmBG,OHnBjB,CAA0B,CAA1B,AU6IF,CWrM6BU,EXqME,EP1H/B,AkB3EkC,EXqMC,GAAJ,EAA/B,CAbuB,CAcvB;AIvGJ,AdtCK,AU8ID,AG1IF,EAAA,aQhEU,CAKA,GR2DO,GAAA;ACmCnB,AXpBI,AHlBD,AU8IC,AG1IA,ANnIG,MAAM,EJiJL,EUdE,ANnIO,GJiJJ,AIjJO,CAAC,IJiJH,GIjJE,EAAgC,GAAG,CMmInD,GADe,CAEf,CVaA,AIjJgB,EJiJQ,GIhJxB,IAAI,8BAAJ,CAAmB,OAAnB,EAA4B,MAA5B,EAAoC,MAApC,EAA4C,kDAA5C,CADG;AOsKP,AXpBM,AO4HF,AGzIA,ANlIJ;AOoKA,AXpBK,AHzKgB,KqBkEjB;AP4HJ,AJuGI,AWpMD,AR2DC,QHyII,AGzIA,KHyIK,AGzIA,UAAL,IHyIA,AGzImB,CHyIC,KGzIK,CAAC,QAAP,KAAoB,MHyIM,CAAC,EGzIlD,EAAsD,QHyIL,EAAe,IAAf,CAA7C,CAAJ,EAAwE;AItG5E,AXrBI,AO4HE,AGzIA,MAAA,EVaE,IO4HI,AGzIA,CAAC,IHyII,EP5HE,CAAC,AO4HA,CGzId,CAAgB,GVaH,AO4HM,CP5HrB,EAAwB,MUbtB,CHyIA,AGzI6B,CHwIyC,CAEtE,EG1IA;ACmCN,AXrBM,AUbD,UVaK,KAAK,KAAK,KAAK,KAAnB,EAA0B;AWsBhC,AXrBQ,AHpBR,AUgJM,AGzIH,GQhMyBR,GrByLtB,MUgJM,CP5HC,CHpBC,GAAG,CAAC,EUgJE,CVhJH,EAAc,AUgJR,CACf,CP7HA,CAAkB,CO6Hf,EVjJM,EGoBT,EO6HS,CVjJyC,AUiJxC,mBAAP,CAA2B,KAA3B,CADY,EAEf,IAAI,OAAO,MAAM,CAAC,qBAAd,KAAwC,UAAzC,GACC,MAAM,CAAC,qBAAP,CAA6B,KAA7B,CADD,GAEC,EAFJ,CAFe,CAAjB,CAHsE,CAStE;AI5GN,AXrBO,AHpBL,AaQA,QbRM,KAAK,GAAG,GAAG,CAAC,MAAJ,GAAa,MAAM,CAAC,MAAlC;Ac0CF,AXrBK,AHpBH,AUqJI,KPrIF,IHhBK,EGoBE,AOiIA,GVrJG,CGoBC,AkB1EAyC,EX2ME,CVrJC,AUqJZ,CVrJG,CGoBW,EOiIE,CVrJC,GAAG,CAAC,GUqJrB,EPjI0B,AHpBT,AUqJS,CVrJC,KAAV,MAAqB,MAA1C,YGoBS,EAAqC;AWsBhD,AXrBM,AHpBL,AUqJO,AHnRD,CP2HP,KO3Ha,GAAG,EJkJL,CIlJQ,CAAC,OAAD,EAAgC,GAAG,MAAnC,EJkJb,CAA4B,EIjJ9B,GJiJE,CIjJE,iCAAJ,CAAsB,OAAtB,EAA+B,MAA/B,EAAuC,KAAvC,EAA8C,kDAA9C,CADG;AOwKP,AXrBK,AOiIG,KPnIG,MAEA,IAAI,KAAK,YAAY,IAArB,EAA2B;AWsBtC,AXrBM,AHCC,AUgIC,MVhIK,KGDF,YAAL,CAAkB,EHCS,GGD3B,AHC+B,IAAD,IAAwB,IAAI,CAAC,KAAL,KAAe,CAAC,CAArE,EAEP;AcmBA,AXrBK,AHGL,AU8HQ,KPnIG,MAEA,EOiIE,EPjIE,UAAU,CAAC,COiIlB,CAAoB,CAApB,EPjIiB,AOiIO,CPjIrB,EAAuB,EOiIW,CAAC,CAAD,CAArC;AI3GR,AXrBM,AOiIC,WPjII,gBAAL,CAAsB,KAAtB;AWsBN,AXrBK,AOiIA,KPnIM,MAEA,IAAI,KAAK,KAAK,aAAd,EAAuB;AWsBlC,AXrBM,AOiIH,AG/IS,EAAA,MAAM,CAAC,EVcR,KAAL,GAAa,OUdD,EAAkC,IVc9C;AWsBN,AXrBM,AOkIJ,AGhJE,UAAM,CVcC,KAAL,AUdF,CAAa,iBAAb;ACoCJ,AXrBK,AHDE,AabH,KVWO,CHEE,IabH,CVcC,OHDc,GAAG,GabJ,GbaU,AabP,KAAK,GbaU,CAAC,EabhB,EAAvB,Sba8B,CAAuB,EAAvB,CAA3B;AcuBP,AXrBM,AHAN;AcsBA,AXrBM,AUfF,QAAI,GVeG,WUfW,CVehB,CAAkB,KAAlB,KUf4B,uBAA9B,EAA8C;ACqClD,AXrBK,AUfE,WAAK,WAAL,CACI,MADJ,CAEO,cAFP,EAGO,KAAK,UAHZ,EAIO;ACiCd,AXrBG,AUZY,QAAA,SAAS,EAAE,KAAK,SAAjB;ACkCd,AJ2GU,AG7IgC,QAAA,CH6IzB,WG7IqC,EAAE,YH6I9C,CACJ,IADI,EACe,OADf,EAC2C;AI3GrD,AXrBU,AOiIN,AG/IU,EVcJ,KUlBH,GVkBW,AOiIR,CPjIS,IAAD,EAAW,EOiIV,GAAG,OAAO,CAAC,SAA1B;AI3GJ,AXrBI,AOiIA,AG/IC,KAT+C,CAUhD,GVaK,EOiIE,KPjIP,CAAa,GOiIG,KAAK,EPjIrB,CAAyB,EOiIlB,GACH,OPlIJ,CAAsC,COiI/B,GPjIP,AOmIK,EPnIuC,KAAK,AOmIrC,OPnIZ,EOmIK,KAAqB,QAArB,GACI,SADJ,GAEK,OAAO,IAAP,KAAgB,QAAhB,GAA2B,IAAI,CAAC,WAAL,EAA3B,GAAgD,SAJ1D;AI3GJ,AXrBG,AOqIA,AGlJC;ACmCJ,AJiHE,AGnJE;ACmCJ,AXrBU,EAAA,YAAY,CAAC,KAAD,EAAY;AWsBlC,AXrBI,QAAI,KAAK,KAAL,KAAe,KAAnB,EAA0B;AWsB9B,AXrBM,AUfF,QAAI,KAAK,4BAAT,EAAuC;ACqC3C,AXrBK,AUfC,WAAK,4BAAL,GAAoC,KAApC;ACqCN;AACA,AXtBI,AUfG,SVeE,EUfG,GVeR,QUfG,CAAuC,OAAvC,CAAgD,OAAhD,CAAyD,CAAD,IAAM;ACsCrE,ADrCQ,cAAM,KAAK,GAAG,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CAAd;ACsCR,AXvBI,AOsIM,AGpJF,QAAA,CVcC,AOsIQ,IGpJJ,CAAC,GVcV,CAAc,KAAd,EOsIM,AGpJF,CHqJF,EGrJsB,CAAC,CAAC,CHoJpB,EACY,GADZ,CGpJF,CHqJ4B,UAAA,GAAyB,QADnD,EAC2D;AI/GrE,AJgHI,AGrJI,WHqJG,EGrJE,QHqJQ,CAAC,CGrJd,CAAgB,GHqJH,EAAQ,GAAR,CAAjB,EGrJI,CAA4B,KAA5B;ACsCR,AXxBI,AOwID,AGrJI,OAJA,EViBE,KAAL,GAAa,KAAb;AWyBJ,AXxBG,AOyID,AGtJG;ACsCL,ADrCG;ACsCH,AXxBU,AUZR,EVYQ,YAAY,CAAC,KAAD,EAAe;AWyBrC,AXxBI,UAAM,IAAI,GAAG,KAAK,SAAL,CAAe,WAA5B;AWyBJ,AXxBI,IAAA,KAAK,GAAG,KAAK,IAAI,IAAT,GAAgB,EAAhB,GAAqB,KAA7B;AWyBJ;AACA,AXzBI,QAAI,IAAI,KAAK,KAAK,OAAL,CAAa,eAAtB,IACA,IAAI,CAAC,QAAL,KAAkB;AWyB1B,AXzB4B;AW0B5B,AX3BI,AO0IM,MPzIwC,GOyIjC,2BAAP,CACJ,KADI,EACgB,OADhB,EAC4C;AI/GtD,AX1BM,AO0IF,AGtJQ,EAAA,MAAM,EHsJR,CGtJQ,CACf,EHqJW,GAAG,OAAO,CAAC,IAArB;AI/GJ,AX1BM,AHEC,AUwIH,MVxIS,IUwIH,SAAS,GAAG,MVxIa,CUwIN,CAAC,CVvI1B,QUuIkB,IAAqB,gBAAvC,gHVxIG;AcyBP,AX1BM,AO0IF,AGzU2C,UHyUrC,aAAa,GACd,OAAO,SAAP,KAAqB,UAArB,GAAkC,SAAlC,GAA8C,SAAS,CAAC,aAD7D;AI/GJ,AX1BO,AO2IH,AG1UF,QV+LK,GO2II,CP3IS,CAAC,IAAd,GAAqB,IO2IJ,CP3IjB,EO2IoB,aAAa,CAAC,KAAD,EAAQ,IAAR,CAAhB,GAAgC,KAApD;AIhHJ,AX1BK,AO2IF,OPjJC,MAMO;AW2BX,AX1BM,AMZC,ACwJL,MDxJW,KNYF,CMZQ,GACf,CAAC,MAAD,CNWE,CAAkB,AMVnB,QNU2B,CAAC,AMX7B,EAEC,OAFD,KNWoB,AMTY,CNU1B,OAAO,KAAP,KAAiB,QAAjB,GAA4B,KAA5B,GAAoC,MAAM,CAAC,KAAD,CAD5B,CAAlB;AW2BN,AXzBK,AMVC,QAAM,SAAS,GAAG,OAAO,CAAC,SAA1B;AKoCN;AACA,AX1BI,AMVE,QAAM,CNUH,KAAL,GAAa,EMVM,GNUnB,AMVsB,cAAM,GAAN,CAAU,SAAV,CAApB;AKqCN,AX1BG;AW2BH,ALrCM,AIvLa,QJuLP,EIvLO,CAAA,SJuLK,AIvLL,GJuLQ,AIvLI,IAAZ,qBJuLiC,IAC1C,SAAS,CAAC,QAAV,KAAuB;AKqCjC,AX1BU,AMX0B,AItLlC,EViMQ,sBAAsB,CAAC,KAAD,EAAsB;AW2BtD,AX1BI,AMbuB,KAEjB,CAAC,CAAE,GNWH,MMX2B,CAAC,CNWpB,GAAG,AMbM,IAEmB,CNWpB,KMX0B,ENW/B,CAAa,SMX8B,MNW3C,CAA6B,KAA7B,CAAjB,iBMbE,CAH8B,CAM9B;AKqCN;AACA,AX3BI,AMVE,QNUE,AMVI,KNUC,KAAL,MMVoB,GAAG,GNUD,SMVa,IAAI,CAAC,cAAc,CAAC,GAAf,CAAmB,CNU3D,IACA,IMXwC,CNWnC,AMXP,CAP8B,CAQ9B,GNUE,CAAW,QAAX,KAAwB,QAD5B,EACsC;AW2B1C,AX1BM,AMVA,ACoJI,SAAO,EP1IN,KAAL,CAAW,MAAX,CAAkB,KAAK,CAAC,IO0IpB,CACJ,CP3IA,IO0II,EACY,OADZ,EACwC;AIhHlD,AX1BK,AO2ID,KP9IA,GO8II,GP3IG,IO2II,CAAC,OAAR,KAAoB,SAAxB,EAAmC;AIhHvC,AX1BM,AMXA,ACsJA,QDtJM,eAAe,GACjB,gBAAgB,GAAG,QAAQ,CAAC,sBAAT,EAAH,GAAuC,SAD3D;AKsCN,AX1BM,AMVA,ACqJD,sBDpJK,MADJ,EAEI,eAFJ,EAGI,MAAA,CAAA,MAAA,CAAA;AKkCV,AX1BM,AMRK,IAAA,eAAe,EAAE,oBAAoB,CAAC,SAAD;AKmChD,AX1BM,AMTI,ACmJN,AG5UK,GJyLC,EAAsD,KCmJtD,AG5UD,CAAA,CJyLC,CAHJ,CCsJQ,CDlKsB,CAiB9B,CCiJW,AG5UR,GAAS,IH4UM,CAAC,IAArB,UG5UK;AC6NT,AX1BM,AMPA,ACiJF,UAAM,EP1IE,OO0IO,CP1IC,EO0IE,CPzIZ,IAAI,EOyIe,CAAC,SAA1B,sBPzIM,CAAqB,QAArB,EAA+B,KAAK,CAAC,SAArC,EAAgD,KAAK,OAArD,CADJ;AW2BN,ALjCM,ACiJF,UAAM,WAAW,GACb,SAAS,IAAK,SAAuC,CAAC,WAAtD,IACA,gBAAgB,CAAC,WAFrB;AI/GJ,AX1BM,AMPA,ACmJF,WAAO,CP5IC,QAAQ,EO4IG,CP5IA,AO4IC,KAAD,EAAQ,CP5IA,CAAC,EO4IT,CAAnB,GP5ImB,EAAjB;AW2BN,ALjCM,ACmJH;AIjHH,AX3BM,AMNA,AC0KJ,MPpKI,QAAQ,CAAC,MAAT,CAAgB,KAAK,CAAC,MAAtB;AW4BN,ALjCM;AKkCN,AX5BM,AMLA,WNKK,YAAL,CAAkB,QAAlB;AW6BN,ALjCM;AKkCN,AX7BM,WAAK,KAAL,GAAa,QAAb;AW8BN,AX7BK,AMLC,MAAI,gBAAJ,EAAsB;AKmC5B,AX7BG,AMLK,ACyKI,EAAA,QDzKE,ECyKQ,EDzKJ,CCyKI,EDzKD,cAAM,GAAN,CAAU,eAAV,CAAb;AKmCR,AJuII,SAAK,uBAAL,GADkB,CAElB;AIvIJ,AX7BU,AMNF,ENME,gBAAgB,AMNZ,CNMa,KAAD,AMNlB,CAAa,CNM8B,cMN3C;AKoCR,AX7BI;AW8BJ,AX7BI,AMPI,AC0KJ,QD1KQ,CC0KH,GD1KO,CAAC,KAAL,KC0KR,OD1K8B,kCAA1B,EAA4C;AKqCpD,AX7BI,AMPM,AC0KP,MD1KO,qBAAqB,CACjB,eADiB,EAEjB,IAAI,CAAC,KAAL,CAAW,QAFM,EAGjB,SAHiB,CAArB;AKqCV,AX7BI,AMJK,ACwKP;AItIF,AX7BI;AW8BJ,AX5BI,AMNI,0BAAY,SAAZ,EAAuB,SAAS,CAAC,UAAjC;AKmCR,AX5BI,AMNI,IAAA,SAAS,CAAC,WAAV,CAAsB,eAAtB;AKmCR,AX5BI;AW6BJ,AX5BI,AMPI,kBAAM,GAAN,CAAU,SAAV,EAAqB,IAArB;AKoCR,AX5BI,AMPG,GAtC6B,CAuC9B,INME,CAAC,KAAK,CAAC,OAAN,CAAc,KAAK,KAAnB,CAAL,EAAgC;AW6BpC,AX5BM,AMNA,WNMK,KAAL,GAAa,EAAb;AW6BN,AX5BM,AMNA,WNMK,KAAL;AW6BN,AX5BK,AMNC,KNR6C,CAgB/C;AW2BJ,AX1BI,AMRE;AKmCN,ALlCM;AKmCN;AACA,AX5BI,UAAM,SAAS,GAAG,KAAK,KAAvB;AW6BJ,AX5BI,AMRE,ACyKI,EAAA,IDzKA,CAAC,CNQH,SAAS,CMRP,ENQU,CAAhB,CMRsB,GCyKO,GAAA,MDzK3B,EAAkC;AKqCxC,AX5BI,AMRI,ACyKJ,IDzKI,INQA,EMRM,CAAC,KNQX,GMRI,CAAiB,YAAjB,CAA+B,SAAwB,CAAC,IAAxD;AKqCR,ALpCO,ACyKH;AIpIJ,AX5BI,AMRC,ACyKA,CD5NE,QN2DE,AOiKC,MPjKK,IAAX,COiKC,CACI,EPlKc,KAAnB,EAA0B,OOiKzB,CACsB,OADtB,CAC8B,CAAC,EAAD,EAAK,CAAL,KAAU;AIrI7C,AX5BM,AOkKI,UAAI,KAAK,cAAL,CAAoB,CAApB,CAAJ,EAA4B;AIrItC,AX5BM,AOkKM,MPlKN,QAAQ,AOkKI,GPlKD,EOkKM,GAAG,IPlKA,CAAC,AOkKI,CAAL,CAAd,OPlKc,CAApB,CAFwB,CAIxB;AW2BN,AJsIY,eAAO,KAAK,CAAL,CAAP;AIrIZ,AX3BM,UAAI,QAAQ,KAAK,SAAjB,EAA4B;AW4BlC,AX3BQ,AOgKI,QPhKJ,IOgKQ,CAAC,GPhKD,EOgKM,CPhKH,IAAI,QAAJ,CAAa,KAAK,AOgKzB,EAA+B,KPhKxB,CAAX;AW4BR,AX3BQ,AOgKM,QPhKN,OOgKW,EPhKF,CAAC,IAAV,CAAe,QAAf,GOgKM,GAA2B,IAAI,GAAJ,EAA3B;AIpId,AJqIa;AIpIb,AX5BQ,YAAI,SAAS,KAAK,CAAlB,EAAqB;AW6B7B,AX5BU,AOgKE,UPhKF,GOgKO,KPhKC,CAAC,aOgKP,CPhKF,AOgK2B,CPhKH,EOgKtB,CAA6B,CPhK/B,AOgKE,EAAgC,KAAhC;AInIZ,AX5BS,AOgKE,SPlKH,MAEO;AW6Bf,AX5BU,AOgKD,KAVJ,KPtJK,QAAQ,CAAC,eAAT,CAAyB,SAAS,CAAC,SAAS,GAAG,CAAb,CAAlC;AW6BV,AX5BS,AOgKN;AInIH,AX5BO,AOiKL;AIpIF;AACA,AX7BM,MAAA,QAAQ,CAAC,QAAT,CAAkB,IAAlB;AW8BN,AX7BM,MAAA,QAAQ,CAAC,MAAT;AW8BN,AX7BM,MAAA,SAAS;AW8Bf,AX7BK,AOgKK,EAAA,wBAAwB,GAAA;AIlIlC,AJmII;AIlIJ,AX7BI,AOgKA,QPhKI,SAAS,GAAG,SAAS,CAAC,MAA1B,EAAkC;AW8BtC,AX7BM,AOgKF;AIlIJ,AX7BM,AOgKF,MPhKE,GOgKG,MPhKM,CAAC,MAAV,GAAmB,GOgKrB,CAA0B,KPhKxB,EOgKF,CAAkC,CAAC,CAAD,EAAI,CAAJ,KAAW,KAAa,CAAb,IAAkB,CAA/D;AIlIJ,AX7BM,WAAK,KAAL,CAAW,QAAQ,IAAI,QAAQ,CAAC,OAAhC;AW8BN,AX7BK,AO+JD,SAAK,mBAAL,GAA2B,SAA3B;AIjIJ,AX7BG,AO+JA;AIjIH;AACA,AX7BE,AO+JA,EP/JA,AO+JA,KP/JK,CAAC,SAAA,EO+JW,CP/JO,EO+JP,GP/JY,SAAxB,EAAiC;AW8BxC,AX7BI,AO+JA,SAAK,YAAL,GAAoB,EP9JhB,GO8JqB,EP9JhB,SAAL,CAAe,AO8JC,GAAoB,OP/JxC,EACgC,SAAS,CAAC,AO8J1C,CADe,CAEf,SPhKA,EACwD,KAAK,OAD7D;AW8BJ,AX5BG,AO+JC;AIlIJ,AJmII;AIlIJ,AXxNqB,AO2VjB;AIlIJ,AX5BA;AW6BA,AJkII,QAAI,KAAK,qBAAT,EAAgC;AIjIpC,AJkIM,WAAK,qBAAL;AIjIN;AACA,AJiIM,WAAK,qBAAL,GAA6B,SAA7B;AIhIN,AJiIK;AIhIL,AJiIG;AIhIH,AJkIE;AIjIF;AACA;AACA;AACA,AXhCM,MAAO,oBAAP,CAA2B;AWiCjC,AX1BE,EAAA,WAAA,CAAY,OAAZ,EAA8B,IAA9B,EAA4C,OAA5C,EAA0E;AW2B5E,AX9BE,SAAA,KAAA,GAAiB,SAAjB;AW+BF,AX9BU,AO8JR,EAAA,OP9JQ,aO8JY,CP9JZ,EO8JY,CP9Jc,AO+JjC,SP/JO;AW+BV,AJkIE;AIjIF,AX7BI,QAAI,OAAO,CAAC,MAAR,KAAmB,CAAnB,IAAwB,OAAO,CAAC,CAAD,CAAP,KAAe,EAAvC,IAA6C,OAAO,CAAC,CAAD,CAAP,KAAe,EAAhE,EAAoE;AW8BxE,AX7BM,YAAM,IAAI,KAAJ,CACF,yDADE,CAAN;AW8BN,AX5BK;AW6BL;AACA,AX7BI,AO6JF,EAAA,OP7JO,OAAL,GAAe,OAAf,AO6JsB,CAAC,IAAD,EAAe,GAAf,EAAiC,KAAjC,EAAmD;AI/H7E,AX7BI,AO6JA,QAAI,CP7JC,EO6JE,EP7JP,GAAY,AO6JA,IP7JZ,CO6JA,EAAmB;AI/HvB,AX7BI,AO6JE,SP7JG,EO6JE,KP7JP,GAAe,OAAf,KO6JE,CAA0B,IAA1B,EAAgC,KAAhC;AI/HN,AX7BG,AO6JE;AI/HL,AJgIG;AI/HH,AX7BE,EAAA,QAAQ,CAAC,KAAD,EAAe;AW8BzB,AX7BI,AO6JM,EAAA,OP7JD,aO6JqB,CP7J1B,AO8JE,GP9JoB,CO6JI,EACL,EP9JrB,GO6J0B,EAExB,OAAA,GAA+B,0BAFP,EAEiC;AIjI/D,AX7BG,AO+JC,UAAM,IAAI,GAAI,KAAK,WAAnB;AIjIJ;AACA,AX7BE,AO8JE,EP9JF,MAAM,EO8JE,CP9JF,GO8JM,GAAG,IAAI,CAAC,yBAAL,CAA+B,IAA/B,EAAqC,OAArC,CAAb;AIhIJ,AX7BI,WAAO,4BAAY,KAAK,cAAjB,CAAP,EAAyC;AW8B7C,AX7BM,AO6JF,QAAI,IP7JI,AO6JA,KAAK,IP7JI,GAAG,EO6JpB,EAAwB,CP7JC,cAAvB;AW8BN,AX7BM,AO6JA,WP7JK,CO6JC,SAAS,GAAG,CP7JlB,GAAsB,AO6JA,CAAC,aP7JvB,YO6JkB,CAA+B,KAA/B,EAAsC,OAAtC,CAAlB,CADsB,CAEtB;AIhIN,AX7BM,MAAA,SAAS,CAAC,IAAD,CAAT;AW8BN,AX7BK;AW8BL,AJ+HM,UAAI,SAAS,KAAK,SAAlB,EAA6B;AI9HnC,AX9BI,AO6JI,QP7JA,KAAK,cAAL,KAAwB,cAA5B,EAAsC;AW+B1C,AX9BM,AO6JC,OALqB,CAMtB;AI/HN,AX9BK,AO8JC;AI/HN,AJgIM;AI/HN,AX/BI,AO+JE,UP/JI,KAAK,GAAG,CAAC,CAAC,KAAK,cAArB;AWgCJ,AJgIM;AI/HN,AXhCI,AOgKE,QPhKE,KAAK,KAAL,KAAe,KAAnB,EAA0B;AWiC9B,AXhCM,AOgKA,UPhKI,KAAJ,EAAW;AWiCjB,AXhCQ,AOgKF,aPhKO,OAAL,CAAa,YAAb,CAA0B,KAAK,IAA/B,EAAqC,EAArC;AWiCR,AXhCO,OAFD,MAEO;AWiCb,AXhCQ,aAAK,OAAL,CAAa,eAAb,CAA6B,KAAK,IAAlC;AWiCR,AXhCO,AO8JD,WAAK,YAAL,GAAoB,KAAK,YAAL,GAAoB,gCAAxC;AI7HN;AACA,AXjCM,AO8JA,UAAI,CP9JC,KAAL,GAAa,AO8JA,IAAI,CP9JjB,GO8JA,EAAuB;AI5H7B,AXjCK,AO8JG,aAAK,eAAL,CAAqB,IAArB;AI5HR,AJ6HO,OAFD,MAEO;AI5Hb,AXlCI,AO+JI,SP/JC,IO+JI,UP/JT,EO+JI,CP/JkB,AO+JA,IAAlB,EAAwB,QP/J5B,CO+JI;AI5HR,AXlCG,AO+JI,OAnBqB,CAoBtB;AI7HN;AACA,AX5EiC;AW6EjC,AXlCA,AO8JM,WAAK,YAAL,GAAoB,KAAK,YAAL,GAAoB,CAAC,gCAAzC;AI3HN,AJ4HK;AI3HL,AJ4HG;AI3HH;AACA,AJ4HU,EAAA,oBAAoB,CAAC,IAAD,EAAe,KAAf,EAAiC;AI3H/D,AJ4HI;AI3HJ,AJ4HI;AI3HJ,AJ4HI,QAAI,KAAK,YAAL,GAAoB,gCAAxB,EAA0D;AI3H9D,AJ4HM;AI3HN,AJ4HK;AI3HL;AACA,AJ2HI,UAAM,IAAI,GAAI,KAAK,WAAnB;AI1HJ;AACA,AXtCM,AOgKF,MPhKS,IOgKH,QAAQ,GAAG,EPhKf,EOgKmB,CAAC,MPhKa,iBOgKlB,CPhKf,AOgK4C,CPhKO,EOgKpC,CAAiC,IAAjC,CAAjB;AIzHJ,AXpCE,EAAA,WAAA,CAAY,OAAZ,EAA8B,IAA9B,EAA4C,OAA5C,EAA0E;AWqC5E,AXpCI,AO6JA,QAAI,EP7JE,MO6JM,CP7JZ,EAAe,EO6JE,EP7JjB,EAAqB,KO6JrB,EP7JA,AO6J4B;AIxHhC,AXpCI,AO6JE,SP7JG,GO6JG,GP7JR,GACK,CO4JU,GACT,GP7JM,CAAC,AO6JH,CAAC,KP7JN,KAAmB,CAAnB,IAAwB,CO6JvB,CAAuB,GAAvB,CAA2B,CP7JG,CAAC,CAAD,CAAP,IO6JvB,CP7JsC,EAAvC,EO6JyC,EP7JI,OAAO,CAAC,CAAD,CAAP,KAAe,EADjE,OO6JE,CAD0B,CAG1B;AI1HN,AXnCG;AWoCH,AJ0HM,WAAK,YAAL,GAAoB,KAAK,YAAL,GAAoB,+BAAxC;AIzHN,AXnCY,AO6JN,EP7JM,SO6JD,EP7JY,GAAA,GO6JjB,IACI;AI1HV,AXnCI,AO8JM,MAAA,IAAI,CP9JH,AO8JI,IP9JA,YAAJ,CAAiB,IAAjB,CAAP,KO8JM,CAAiC,KAAjC,EAAwC,OAAxC,CAFJ,CAL0B,CAQ1B;AI3HN,AXnCG;AWoCH,AJ2HM,WAAK,YAAL,GAAoB,KAAK,YAAL,GAAoB,CAAC,+BAAzC;AI1HN,AXnCY,AO8JP,EP9JO,SAAS,GAAA;AWoCrB,AXnCI,AO8JD,QP9JK,KAAK,MAAT,EAAiB;AWoCrB,AXnCM,AO+JJ,aP/JW,KAAK,KAAL,CAAW,CAAX,EAAc,KAArB;AWoCN,AXnCK;AWoCL;AACA,AXpCI,WAAO,MAAM,SAAN,EAAP;AWqCJ,AXpCG;AWqCH;AACA,AXpCE,EAAA,MAAM,GAAA;AWqCR,AXpCI,AO8JM,EAAA,MP9JF,KAAK,GO8JW,CAAC,CP9JrB,EAAgB,CO8JI,EAAqB,QAArB,EAAuC;AIzH/D,AXpCM,AO8JF,QAAI,GP9JG,KAAL,GAAa,KAAb,CADc,CAEd,CO6JqB,GAAG,IAA1B,CAD2D,CAE3D;AI1HJ;AACA,AXpCO,AO8JH,QAAI,GP9JI,CO8JA,KAAK,CP9JV,CAAqB,KAAK,EO8J7B,EP9JG,AO8JqB,IP9Ja,KAAK,SAAL,EAAlC;AWqCP,AXpCK,AO8JC,YAAM,IAAI,GAAG,KAAK,WAAlB;AIzHN,AXpCG,AO8JG,YAAM,OAAO,GACT,IAAI,CAAC,gBAAL,CAAuB,GAAvB,CAA2B,IAA3B,KAAoC,0BADxC;AIzHN;AACA,AXhEyD,AO0LnD,UAAI,IAAI,CAAC,gBAAL,CACI,KAAK,IAAL,CADJ,EAC8B,QAD9B,EACwC,OAAO,CAAC,UADhD,CAAJ,EACiE;AI1HvE,AJ2HQ,YAAI,CAAC,KAAK,kBAAL,CAAwB,GAAxB,CAA4B,IAA5B,CAAL,EAAwC;AI1HhD,AJ2HU,eAAK,kBAAL,CAAwB,GAAxB,CAA4B,IAA5B,EAAkC,QAAlC;AI1HV,AJ2HS,SAH8D,CAI/D;AI3HR,AXvCM,AOmKE,MPnKK,YAAP,SAA4B,aAA5B,CAAyC,GAE/C;AWsCA,AXrCA,AOiKQ;AI3HR,AXrCA,AOiKQ;AI3HR,AXrCA;AWsCA;AACA,AJ0HQ,YAAI,OAAO,CAAC,OAAR,KAAoB,IAApB,IACA,EAAE,KAAK,YAAL,GAAoB,+BAAtB,CADJ,EAC4D;AI1HpE,AJ2HU,cAAI,KAAK,qBAAL,KAA+B,SAAnC,EAA8C;AI1HxD,AXxCA,AOmKY,IPnKR,aOmKa,QPnKQ,GAAG,KAA5B,KOmKY,GAA6B,IAAI,GAAJ,EAA7B;AI1HZ,AJ2HW;AI1HX,AXxCA,IAAI;AWyCJ,AXxCE,AOkKQ,QPlKF,OAAO,AOkKA,GPlKG,kBOkKR,CAA2B,GAA3B,CAA+B,IAA/B,EAAqC,OAArC;AIzHV,AXxCI,AOkKK,QPlKD,OAAJ,GAAW;AWyCf,AXxCM,AOkKC,MPlKD,COkJA,MAgBO,cPlKc,GAAG,IAAxB;AWyCN,AXxCM,AOkKE,aPlKK,KAAP;AWyCN,AXxCK,AOkKG,QAAA,mBAAmB,GAAG,KAAtB;AIzHR,AJ0HO;AIzHP,AX9CkB,AOwKb,GPxKH,CADE,CAOF;AWyCF;AACA,AXzCE,AOkKE,EPlKF,MAAM,AOkKA,CPlKC,AOkKA,KAAK,WPlKZ,CAAwB,MAAxB,COkKM,CPlK0B,GOkKG,IPlKnC,EAAgD,OAAhD,EARE,CASF,GOiKE,EAAsD;AIxH1D,AJyHM,WAAK,cAAL;AIxHN,AXzCE,AOkKG,EPlKH,MAAM,CAAC,mBAAP,CAA2B,MAA3B,EAAmC,OAAnC,EAAmD,OAAnD;AW0CF,AXzCC,AOkKE,CP7KH,CAWE,OAAO,EAAP,EAAW,CACZ;AWyCD,AJ0HE;AIzHF,AXrCM,MAAO,SAAP,CAAgB;AWsCtB,AX7BE,EAAA,WAAA,CAAY,OAAZ,EAA8B,SAA9B,EAAiD,YAAjD,EAA2E;AW8B7E,AXnCE,SAAA,KAAA,GAA2C,SAA3C;AWoCF,AXlCU,SAAA,cAAA,GAAoD,SAApD;AWmCV,AX/BI,SAAK,OAAL,GAAe,OAAf;AWgCJ,AX/BI,SAAK,SAAL,GAAiB,SAAjB;AWgCJ,AX/BI,SAAK,YAAL,GAAoB,YAApB;AWgCJ;AACA,AXhCI,SAAK,kBAAL,GAA2B,CAAD,IAAO,KAAK,WAAL,CAAiB,CAAjB,CAAjC;AWiCJ,AXhCG;AWiCH;AACA,AXhCE,EAAA,QAAQ,CAAC,KAAD,EAAyC;AWiCnD,AXhCI,SAAK,cAAL,GAAsB,KAAtB;AWiCJ,AXhCG;AWiCH,AJwHE,EAAA,aAAa,CAAC,IAAD,EAAqB,QAArB,EAAuC;AIvHtD,AXhCE,AOwJE,EPxJF,MAAM,COwJC,EPxJD,YOwJJ,CAAoB,IAApB,EAA0B,QAA1B;AIvHJ,AXhCI,WAAO,4BAAY,KAAK,cAAjB,CAAP,EAAyC;AWiC7C,AXhCM,AOuJF,WAAO,CPvJC,IOuJI,KPvJK,GAAG,KAAK,COuJzB,aPvJE;AWiCN,AXhCM,AOuJH,WPvJQ,cAAL,GAAsB,cAAtB;AWiCN,AXhCM,AOwJJ,MPxJI,SAAS,CAAC,IAAD,CAAT;AWiCN,AXhCK;AWiCL;AACA,AXjCI,QAAI,KAAK,cAAL,KAAwB,cAA5B,EAAsC;AWkC1C,AXjCM;AWkCN,AXjCK,AOuJK,QAAM,cAAN,GAAoB;AIrH9B,AJsHI;AIrHJ,AXjCI,AOuJA,SAAK,CPvJC,WAAW,AOuJjB,GPvJoB,AOuJA,KPvJK,AOuJA,YAAL,EPvJpB,COuJwC,sBAAxC;AIrHJ,AXjCI,AOuJA,QAAI,EPvJE,KOuJN,MPvJiB,GAAG,KAAK,KAAzB;AWkCJ,AXjCI,AOuJA,QAAI,EPvJE,IOuJN,gBPvJ0B,GAAG,WAAW,IAAI,IAAf,IACzB,WAAW,IAAI,IAAf,KACK,WAAW,CAAC,OAAZ,KAAwB,WAAW,CAAC,OAApC,IACA,WAAW,CAAC,IAAZ,KAAqB,WAAW,CAAC,IADjC,IAEA,WAAW,CAAC,OAAZ,KAAwB,WAAW,CAAC,OAHzC,CADJ;AWkCJ,AX7BI,AOmJA,UPnJM,AOmJA,iBPnJiB,GACnB,COkJuB,GAAG,KAAK,EPlJpB,IAAI,IAAf,IOkJJ,CPlJ4B,WAAW,IAAI,IAAf,IAAuB,oBAA/C,CADJ;AW8BJ,AJsHI,SAAK,cAAL,GAAsB,IAAI,OAAJ,CAAY,CAAC,GAAD,EAAM,GAAN,KAAa;AIrHnD,AX5BI,AOkJE,MAAA,EPlJE,KOkJK,GAAG,GAAV,SPlJF,EAA0B;AW6B9B,AX5BM,AOkJA,MAAA,KPlJK,COkJC,GAAG,GPlJT,AOkJA,CPlJa,mBAAb,CACI,KAAK,SADT,EACoB,KAAK,kBADzB,EAC6C,KAAK,SADlD;AW6BN,AX3BK,AOiJA,KAHqB,CAAtB;AIlHJ;AACA,AX5BI,AOiJA,QPjJI,AOiJA,iBPjJJ,EAAuB;AW6B3B,AX5BM,AOiJA,WPjJK,SAAL,GAAiB,UAAU,CAAC,WAAD,CAA3B;AW6BN,AX5BM,AOiJA,WPjJK,OAAL,CAAa,gBAAb,CACI,KAAK,SADT,EACoB,KAAK,kBADzB,EAC6C,KAAK,SADlD;AW6BN,AX3BK,AOgJC,YAAM,qBAAN;AIpHN,AJqHK,KAJD,CAIE,OAAO,CAAP,EAAU,CAGX,CAHC,CACA;AIrHN,AX5BI,AOkJE,SPlJG,KAAL,GAAa,WAAb;AW6BJ,AX5BI,AOmJA,SPnJK,cAAL,GAAsB,cAAtB;AW6BJ,AX5BG;AW6BH;AACA,AX5BE,AOiJE,EPjJF,MOiJM,CAAC,IPjJI,CAAC,AOiJA,KPjJD,EAAa,MOiJtB,EAAyB;AIpH7B,AX5BI,AOiJE,QPjJE,IOiJI,GPjJG,COiJC,IPjJI,GOiJR,CAAa,CPjJjB,EOiJgB,GPjJM,COiJG,KAAK,IPjJlC,EAAsC,eOiJT,GAA6B,GAAlD,CAAN;AIpHN,AX5BM,AOiJD,WPjJM,KAAL,CAAW,IAAX,CAAgB,KAAK,YAAL,IAAqB,KAAK,OAA1C,EAAmD,KAAnD;AW6BN,AX5BK,KAFD,MAEO;AW6BX,AX5BO,AOgJH,QAAI,GPhJI,KAAL,CAAmC,WAAnC,CAA+C,KAA/C;AW6BP,AX5BK,AOgJC,YAAM,MAAM,GAAG,KAAK,aAAL,EAAf,CADE,CAEF;AIpHN,AX5BG,AOiJG;AIpHN,AJqHM;AIpHN,AXzFsB,EA8DtB;AW4BA,AX3BA,AO+IM,UAAI,MAAM,IAAI,IAAd,EAAoB;AInH1B,AX3BA,AO+IQ,cAAM,MAAN;AInHR,AJoHO;AInHP,AJoHK,KARD,CAQE,OAAO,CAAP,EAAU;AInHhB,AJoHM,MAAA,MAAM,CAAC,CAAD,CAAN;AInHN,AJoHK;AInHL,AX/BA,MAAM,UAAU,GAAI,CAAD,IAA0C,CAAC,KACzD,qBAAqB,GACjB;AW8BT,AX9BU,AOiJN,EPjJM,EOiJN,KPjJa,EAAE,AOiJR,CPjJS,AOiJR,CPjJS,AOiJR,KAAK,EPjJT,iBOiJE,CAAP;AIlHJ,AX/B8B,AOkJ3B,EPlJ2B,OAAO,EAAE,CAAC,CAAC,OAAhC;AWgCT,AXhCkD,EAAA,IAAI,EAAE,CAAC,CAAC;AWiC1D,AXjCS,AOoJP,CPrJwB,GAEjB,CAAC,CAAC,AOmJG,OPtJgD,CAA9D,KOsJE,GAAyB;AIlH3B,AJmHI,WAAQ,KAAK,YAAL,GAAoB,mBAA5B;AIlHJ,AJmHG;AIlHH;AACA,AJmHE,MAAY,mBAAZ,GAA+B;AIlHjC,AJmHI,WAAQ,KAAK,YAAL,GAAoB,sBAA5B;AIlHJ,AJmHG;AIlHH;AACA,AJmHE,MAAc,UAAd,GAAwB;AIlH1B,AJmHI,WAAQ,KAAK,YAAL,GAAoB,iBAA5B;AIlHJ,AJmHG;AIlHH,AJoHE;AInHF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AJkHY,EAAA,aAAa,GAAA;AIjHzB,AJkHI;AIjHJ,AJkHI,QAAI,KAAK,mBAAT,EAA8B;AIjHlC,AJkHM,WAAK,wBAAL;AIjHN,AJkHK;AIjHL;AACA,AJiHI,QAAI,YAAY,GAAG,KAAnB;AIhHJ,AJiHI,UAAM,iBAAiB,GAAG,KAAK,kBAA/B;AIhHJ;AACA,AJgHI,QAAI;AI/GR,AJgHM,MAAA,YAAY,GAAG,KAAK,YAAL,CAAkB,iBAAlB,CAAf;AI/GN;AACA,AJ+GM,UAAI,YAAJ,EAAkB;AI9GxB,AJ+GQ,aAAK,MAAL,CAAY,iBAAZ;AI9GR,AJ+GO;AI9GP,AJ+GK,KALD,CAKE,OAAO,CAAP,EAAU;AI9GhB,AJ+GM;AI9GN,AJ+GM;AI9GN,AJ+GM,MAAA,YAAY,GAAG,KAAf;AI9GN,AJ+GM,YAAM,CAAN;AI9GN,AJ+GK,KAVD,SAUU;AI9Gd,AJ+GM;AI9GN,AJ+GM,WAAK,YAAL;AI9GN,AJ+GK;AI9GL;AACA,AJ8GI,QAAI,YAAJ,EAAkB;AI7GtB,AJ8GM,UAAI,EAAE,KAAK,YAAL,GAAoB,iBAAtB,CAAJ,EAA8C;AI7GpD,AJ8GQ,aAAK,YAAL,GAAoB,KAAK,YAAL,GAAoB,iBAAxC;AI7GR,AJ8GQ,aAAK,YAAL,CAAkB,iBAAlB;AI7GR,AJ8GO;AI7GP;AACA,AJ6GM,WAAK,OAAL,CAAa,iBAAb;AI5GN,AJ6GK;AI5GL,AJ6GG;AI5GH;AACA,AJ6GU,EAAA,YAAY,GAAA;AI5GtB,AJ6GI,SAAK,kBAAL,GAA0B,IAAI,GAAJ,EAA1B;AI5GJ,AJ6GI,SAAK,YAAL,GAAoB,KAAK,YAAL,GAAoB,CAAC,sBAAzC;AI5GJ,AJ6GG;AI5GH,AJ8GE;AI7GF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AJ4GE,MAAI,cAAJ,GAAkB;AI3GpB,AJ4GI,WAAO,KAAK,cAAZ;AI3GJ,AJ4GG;AI3GH,AJ6GE;AI5GF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AJ2GY,EAAA,YAAY,CAAC,kBAAD,EAAmC;AI1G3D,AJ2GI,WAAO,IAAP;AI1GJ,AJ2GG;AI1GH,AJ4GE;AI3GF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AJ0GY,EAAA,MAAM,CAAC,kBAAD,EAAmC;AIzGrD,AJ0GI,QAAI,KAAK,qBAAL,KAA+B,SAA/B,IACA,KAAK,qBAAL,CAA2B,IAA3B,GAAkC,CADtC,EACyC;AI1G7C,AJ2GM;AI1GN,AJ2GM;AI1GN,AJ2GM,WAAK,qBAAL,CAA2B,OAA3B,CACI,CAAC,CAAD,EAAI,CAAJ,KAAU,KAAK,oBAAL,CAA0B,CAA1B,EAA6B,KAAK,CAAL,CAA7B,EAAoD,CAApD,CADd;AI1GN;AACA,AJ2GM,WAAK,qBAAL,GAA6B,SAA7B;AI1GN,AJ2GK;AI1GL,AJ2GG;AI1GH,AJ4GE;AI3GF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AJ0GY,EAAA,OAAO,CAAC,kBAAD,EAAmC,CACnD;AI1GH,AJ4GE;AI3GF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AJ0GY,EAAA,YAAY,CAAC,kBAAD,EAAmC,CACxD;AI1GH;AACA,AJ1eyD;AI2ezD,AJ7dE;AI8dF;AACA;AACA;AACA;AACA;AACA,AJhemB,eAAA,CAAA,SAAA,GAAY,IAAZ;AIienfile":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// tslint:disable-next-line:no-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node',\n  index: number\n}|{readonly type: 'attribute', index: number, readonly name: string, readonly strings: ReadonlyArray<string>};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: ReadonlyArray<unknown>) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: ReadonlyArray<unknown>;\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: ReadonlyArray<unknown>,\n      type: string, processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment poisition.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceeding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceeding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? marker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|Symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // tslint:disable-next-line:no-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = value as string;\n    } else {\n      this.__commitNode(document.createTextNode(\n          typeof value === 'string' ? value : String(value)));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // tslint:disable-next-line:no-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n  };\n  // tslint:disable-next-line:no-any\n  window.addEventListener('test', options as any, options);\n  // tslint:disable-next-line:no-any\n  window.removeEventListener('test', options as any, options);\n} catch (_e) {\n}\n\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behaviour, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport type templateCache = {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>; //\n  readonly keyString: Map<string, Template>;\n};\n\nexport const templateCaches = new Map<string, templateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\nimport {TemplateResult} from './template-result.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: TemplateResult,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.0.0');\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module shady-render\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex: number = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (renderedDOM: DocumentFragment, template: Template, scopeName: string) => {\n      shadyRenderSet.add(scopeName);\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        window.ShadyCSS!.prepareTemplateStyles(template.element, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = template.element.content;\n      insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(template.element, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: TemplateResult,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host && result instanceof TemplateResult;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        if (part.value instanceof TemplateInstance) {\n          prepareTemplateStyles(\n              renderContainer as DocumentFragment,\n              part.value.template,\n              scopeName);\n        }\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|((value: string, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\nexport type PropertyValues = Map<PropertyKey, unknown>;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        return JSON.parse(value!);\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst microtaskPromise = Promise.resolve(true);\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY|typeof STATE_HAS_CONNECTED;\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static finalized = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    Object.defineProperty(this.prototype, name, {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return this[key];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        // tslint:disable-next-line:no-any no symbol in index\n        const oldValue = (this as any)[name];\n        // tslint:disable-next-line:no-any no symbol in index\n        (this as any)[key] = value;\n        this._requestUpdate(name, oldValue);\n      },\n      configurable: true,\n      enumerable: true\n    });\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this)) &&\n        this.finalized) {\n      return;\n    }\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (typeof superCtor.finalize === 'function') {\n      superCtor.finalize();\n    }\n    this.finalized = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState: UpdateState = 0;\n  private _instanceProperties: PropertyValues|undefined = undefined;\n  private _updatePromise: Promise<unknown> = microtaskPromise;\n  private _hasConnectedResolver: (() => void)|undefined = undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties: PropertyValues = new Map();\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties: Map<PropertyKey, PropertyDeclaration>|\n      undefined = undefined;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of `updateComplete`\n    this._requestUpdate();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    this._updateState = this._updateState | STATE_HAS_CONNECTED;\n    // Ensure first connection completes an update. Updates cannot complete before\n    // connection and if one is pending connection the `_hasConnectionResolver`\n    // will exist. If so, resolve it to complete the update, otherwise\n    // requestUpdate.\n    if (this._hasConnectedResolver) {\n      this._hasConnectedResolver();\n      this._hasConnectedResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const propName = ctor._attributeToPropertyMap.get(name);\n    if (propName !== undefined) {\n      const options =\n          ctor._classProperties!.get(propName) || defaultPropertyDeclaration;\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This private version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  private _requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      const options =\n          ctor._classProperties!.get(name) || defaultPropertyDeclaration;\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this._requestUpdate(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    // Mark state updating...\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    let resolve!: (r: boolean) => void;\n    let reject!: (e: Error) => void;\n    const previousUpdatePromise = this._updatePromise;\n    this._updatePromise = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await previousUpdatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    // Make sure the element has connected before updating.\n    if (!this._hasConnected) {\n      await new Promise((res) => this._hasConnectedResolver = res);\n    }\n    try {\n      const result = this.performUpdate();\n      // If `performUpdate` returns a Promise, we await it. This is done to\n      // enable coordinating updates with a scheduler. Note, the result is\n      // checked to avoid delaying an additional microtask unless we need to.\n      if (result != null) {\n        await result;\n      }\n    } catch (e) {\n      reject(e);\n    }\n    resolve(!this._hasRequestedUpdate);\n  }\n\n  private get _hasConnected() {\n    return (this._updateState & STATE_HAS_CONNECTED);\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      throw e;\n    } finally {\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update. This getter can be implemented to\n   * await additional state. For example, it is sometimes useful to await a\n   * rendered element before fulfilling this Promise. To do this, first await\n   * `super.updateComplete` then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  new (...args: unknown[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          // tslint:disable-next-line:no-any decorator\n          initializer(this: any) {\n            if (typeof element.initializer === 'function') {\n              this[element.key] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options: AddEventListenerOptions) =>\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n         (name !== undefined) ?\n         legacyEventOptions(options, protoOrDescriptor as Object, name) :\n         standardEventOptions(options, protoOrDescriptor as ClassElement)) as\n        // tslint:disable-next-line:no-any decorator\n        any;\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const supportsAdoptingStyleSheets =\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n      // is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings: TemplateStringsArray, ...values: CSSResult[]) => {\n  const cssText = values.reduce(\n      (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n      strings[0]);\n  return new CSSResult(cssText, constructionToken);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport {TemplateResult} from 'lit-html';\nimport {render} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.0.1');\n\nexport interface CSSResultArray extends Array<CSSResult|CSSResultArray> {}\n\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(\n    styles: CSSResultArray, result: CSSResult[] = []): CSSResult[] {\n  for (let i = 0, length = styles.length; i < length; i++) {\n    const value = styles[i];\n    if (Array.isArray(value)) {\n      arrayFlat(value, result);\n    } else {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles: CSSResultArray): CSSResult[] =>\n    styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\n\nexport class LitElement extends UpdatingElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   */\n  protected static finalized = true;\n\n  /**\n   * Render method used to render the lit-html TemplateResult to the element's\n   * DOM.\n   * @param {TemplateResult} Template to render.\n   * @param {Element|DocumentFragment} Node into which to render.\n   * @param {String} Element name.\n   * @nocollapse\n   */\n  static render = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static styles?: CSSResult|CSSResultArray;\n\n  private static _styles: CSSResult[]|undefined;\n\n  /** @nocollapse */\n  protected static finalize() {\n    super.finalize();\n    // Prepare styling that is stamped at first render time. Styling\n    // is built from user provided `styles` or is inherited from the superclass.\n    this._styles =\n        this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n        this._getUniqueStyles() :\n        this._styles || [];\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles(): CSSResult[] {\n    // Take care not to call `this.styles` multiple times since this generates\n    // new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.styles;\n    const styles: CSSResult[] = [];\n    if (Array.isArray(userStyles)) {\n      const flatStyles = flattenStyles(userStyles);\n      // As a performance optimization to avoid duplicated styling that can\n      // occur especially when composing via subclassing, de-duplicate styles\n      // preserving the last item in the list. The last item is kept to\n      // try to preserve cascade order with the assumption that it's most\n      // important that last added styles override previous styles.\n      const styleSet = flatStyles.reduceRight((set, s) => {\n        set.add(s);\n        // on IE set.add does not return the set.\n        return set;\n      }, new Set<CSSResult>());\n      // Array.from does not work on Set in IE\n      styleSet.forEach((v) => styles.unshift(v));\n    } else if (userStyles) {\n      styles.push(userStyles);\n    }\n    return styles;\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls `createRenderRoot`\n   * to create the element `renderRoot` node and captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this as {renderRoot: Element | DocumentFragment}).renderRoot =\n        this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow({mode: 'open'});\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the `static get styles`\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it.\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim.prepareAdoptedCssText(\n          styles.map((s) => s.cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    super.update(changedProperties);\n    const templateResult = this.render() as unknown;\n    if (templateResult instanceof TemplateResult) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = s.cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render(): TemplateResult|void {\n  }\n}\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.3\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback retuns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","export function prop<T, P extends keyof T = keyof T>(key: P): (t: T) => T[P] {\n  return t => t[key]\n}\n","import { LitElement, customElement, html, css } from 'lit-element'\n\n@customElement('pl-header')\nclass Header extends LitElement {\n  static get styles() {\n    return css`\n      :host {\n        display: flex;\n        justify-content: space-between;\n        padding: 0 1rem;\n      }\n\n      button {\n        align-self: center;\n        border: 1px solid #ccc;\n      }\n    `\n  }\n\n  /**\n   * @param {MouseEvent} _e\n   */\n  handleShowForm(_e) {\n    this.dispatchEvent(new CustomEvent('toggle-form'))\n  }\n\n  render() {\n    return html`\n      <h1>Personal Links</h1>\n      <button @click=${this.handleShowForm}>New link</button>\n    `\n  }\n}\n\nexport default Header\n","/**\n * @template T\n * @param {T} x\n * @return {T}\n */\nexport const identity = x => x\n","import { LitElement, html, css, customElement } from 'lit-element'\nimport { identity } from '../utils/identity'\n\n@customElement('pl-form')\nclass Form extends LitElement {\n  static get styles() {\n    return css`\n      label {\n        display: block;\n      }\n    `\n  }\n\n  /**\n   * @param {Event & { target: HTMLFormElement }} e\n   */\n  handleSubmit(e) {\n    e.preventDefault()\n\n    let event = new CustomEvent('new-link', {\n      detail: {\n        link: this.convertFormValuesToLink(e.target)\n      }\n    })\n\n    this.dispatchEvent(event)\n  }\n\n  /**\n   * @param {HTMLFormElement} form\n   * @return {import('../models/link').Link}\n   */\n  convertFormValuesToLink(form) {\n    return {\n      url: form.url.value,\n      description: form.description.value,\n      tags: form.tags.value.split(/\\s+/g).filter(identity),\n      createdAt: new Date()\n    }\n  }\n\n  render() {\n    return html`\n      <form @submit=${this.handleSubmit}>\n        <p>\n          <label for=\"url\">URL</label>\n          <input id=\"url\" type=\"url\" name=\"url\" />\n        </p>\n        <p>\n          <label for=\"description\">Description</label>\n          <textarea\n            id=\"description\"\n            name=\"description\"\n            cols=\"42\"\n            rows=\"4\"\n          ></textarea>\n        </p>\n        <p>\n          <label for=\"tags\">Tags</label>\n          <input id=\"tags\" type=\"text\" name=\"tags\" />\n        </p>\n        <p>\n          <button>Create</button>\n        </p>\n      </form>\n    `\n  }\n}\n\nexport default Form\n","import { LitElement, customElement, property, html, css } from 'lit-element'\n\n@customElement('pl-tag')\nclass Tag extends LitElement {\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n        cursor: pointer;\n      }\n\n      :host(.active) {\n        text-decoration: underline;\n      }\n    `\n  }\n\n  /**\n   * @param {boolean} value\n   */\n  @property({ type: Boolean })\n  set active(value) {\n    this.classList.toggle('active', value)\n  }\n\n  /**\n   * @type {string} tag\n   */\n  @property()\n  tag = ''\n\n  render() {\n    return html`\n      ${this.tag}\n    `\n  }\n}\n\nexport default Tag\n","import { LitElement, customElement, property, html, css } from 'lit-element'\n\n/**\n * @param {string} tag\n */\nconst tagTemplate = tag =>\n  html`\n    <li>${tag}</li>\n  `\n\n/**\n * @param {any} v\n */\nconst pad = v => String(v).padStart(2, '0')\n\n@customElement('pl-link')\nclass Link extends LitElement {\n  static get styles() {\n    return css`\n      ul {\n        display: flex;\n        padding: 0;\n        list-style: none;\n      }\n\n      li:not(:last-child)::after {\n        content: ',';\n        margin-right: 1ch;\n      }\n    `\n  }\n\n  /**\n   * @type {import('../models/link').Link} link\n   */\n  @property({ type: Object }) link\n\n  /**\n   * @param {Date} date\n   * @return {string}\n   */\n  formatDate(date) {\n    return `${pad(date.getMonth() + 1)}.${pad(\n      date.getDate()\n    )}.${date.getFullYear()}`\n  }\n\n  render() {\n    return html`\n      <header>\n        <strong><a href=${this.link.url}>${this.link.url}</a></strong>\n        <time datetime=${this.link.createdAt.toJSON()}\n          >${this.formatDate(this.link.createdAt)}</time\n        >\n      </header>\n      <p>${this.link.description}</p>\n      <ul>\n        ${this.link.tags.map(tagTemplate)}\n      </ul>\n    `\n  }\n}\n\nexport default Link\n","import { LitElement, html, css, customElement, property } from 'lit-element'\nimport localForage from 'localforage'\nimport { prop } from '../utils/prop'\nimport './pl-header'\nimport './pl-form'\nimport './pl-tag'\nimport './pl-link'\n\n@customElement('personal-links')\nclass PersonalLinks extends LitElement {\n  static get styles() {\n    return css`\n      :host {\n        display: grid;\n        grid-template:\n          'header header'\n          'left right' / var(--left-width, 2fr) var(--right-width, 3fr);\n        grid-gap: 1rem;\n        padding: 2rem;\n      }\n\n      pl-header,\n      aside,\n      main {\n        background-color: #eeeeec;\n      }\n\n      aside,\n      main {\n        padding: 1rem;\n      }\n\n      pl-header {\n        grid-area: header;\n      }\n      aside {\n        grid-area: left;\n      }\n      main {\n        grid-area: right;\n      }\n\n      pl-link {\n        display: block;\n      }\n    `\n  }\n\n  @property()\n  get tags() {\n    return [...new Set(this.links.flatMap(prop('tags')))]\n  }\n\n  /**\n   * @type {import('../models/link').Link[]} links\n   */\n  @property({ type: Array })\n  links = []\n\n  @property({ type: Boolean })\n  formOpen = false\n\n  @property()\n  selectedTags = new Set()\n\n  @property()\n  get selectedLinks() {\n    return this.selectedTags.size === 0\n      ? this.links\n      : this.links.filter(link =>\n          link.tags.some(tag => this.selectedTags.has(tag))\n        )\n  }\n\n  async firstUpdated() {\n    this.links = (await localForage.getItem('links')) || []\n  }\n\n  /**\n   * @param {CustomEvent} _e\n   */\n  handleToggleForm(_e) {\n    this.formOpen = !this.formOpen\n  }\n\n  /**\n   * @param {CustomEvent} event\n   */\n  handleNewLink({ detail: { link } }) {\n    this.links = [...this.links, link]\n    localForage.setItem('links', this.links)\n    this.formOpen = false\n  }\n\n  /**\n   * @param {MouseEvent & { target: { tag: string }}} e\n   */\n  handleToggleTag({ target: { tag } }) {\n    if (this.selectedTags.has(tag)) {\n      this.selectedTags.delete(tag)\n    } else {\n      this.selectedTags.add(tag)\n    }\n\n    this.requestUpdate('selectedTags')\n  }\n\n  render() {\n    return html`\n      <pl-header @toggle-form=${this.handleToggleForm}></pl-header>\n      <aside>\n        ${this.tags.map(\n          tag =>\n            html`\n              <pl-tag\n                .tag=${tag}\n                .active=${this.selectedTags.has(tag)}\n                @click=${this.handleToggleTag}\n                >${tag}</pl-tag\n              >\n            `\n        )}\n      </aside>\n      <main>\n        ${this.formOpen\n          ? html`\n              <pl-form @new-link=${this.handleNewLink}></pl-form>\n            `\n          : ''}\n        <div class=\"link-list\">\n          ${this.selectedLinks.map(\n            link =>\n              html`\n                <pl-link .link=${link}></pl-link>\n              `\n          )}\n        </div>\n      </main>\n    `\n  }\n}\n\nexport default PersonalLinks\n","import './components/personal-links'\n"]}